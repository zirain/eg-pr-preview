<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>参与其中 on Envoy Gateway</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/</link><description>Recent content in 参与其中 on Envoy Gateway</description><generator>Hugo</generator><language>zh</language><atom:link href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/index.xml" rel="self" type="application/rss+xml"/><item><title>路线图</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/roadmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/roadmap/</guid><description>&lt;p>本文档可作为 Envoy Gateway 用户和贡献者了解项目方向的高级参考。&lt;/p>
&lt;h2 id="contributing-to-the-roadmap">为路线图做出贡献&lt;a class="td-heading-self-link" href="#contributing-to-the-roadmap" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>要将功能添加到路线图中，请创建 &lt;a href="https://github.com/envoyproxy/gateway/issues">Issue&lt;/a> 或加入&lt;a href="https://docs.google.com/document/d/1leqwsHX8N-XxNEyTflYjRur462ukFxd19Rnk3Uzy55I/edit?usp=sharing">社区会议&lt;/a>来讨论您的用例。
如果您的功能被接受，维护人员会将您的 Issue 分配到&lt;a href="https://github.com/envoyproxy/gateway/milestones">发布里程碑&lt;/a>并相应地更新此文档。&lt;/li>
&lt;li>为了帮助解决现有的路线图项，请对相关 Issue 进行评论或将自己分配到该 Issue。&lt;/li>
&lt;li>如果路线图项没有 Issue，请创建一个 Issue，将自己分配到该 Issue，并参考此文档。
维护者将提交 &lt;a href="https://github.com/envoyproxy/gateway/compare">Pull Request&lt;/a> 以将该功能添加到路线图中。
**注意：**在实现该功能之前，应在 Issue 或社区会议上讨论该功能。&lt;/li>
&lt;/ul>
&lt;p>如果您不知道从哪里开始贡献，需要帮助来减少技术、自动化和文档债务。查找带有 &lt;code>help wanted&lt;/code> 标签的 Issue 以开始。&lt;/p>
&lt;h2 id="details">细节&lt;a class="td-heading-self-link" href="#details" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>路线图功能和时间表可能会根据反馈、社区贡献等而改变。
如果您依赖特定的路线图项，我们鼓励您参加社区会议讨论细节，或者通过为项目做出贡献来帮助我们提供该功能。&lt;/p>
&lt;p>&lt;code>最后更新时间：2023 年 4 月&lt;/code>&lt;/p>
&lt;h3 id="v020v020-建立坚实的基础">&lt;a href="https://github.com/envoyproxy/gateway/milestone/1">v0.2.0&lt;/a>: 建立坚实的基础&lt;a class="td-heading-self-link" href="#v020v020-%e5%bb%ba%e7%ab%8b%e5%9d%9a%e5%ae%9e%e7%9a%84%e5%9f%ba%e7%a1%80" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>完成核心 Envoy Gateway 实现 - &lt;a href="https://github.com/envoyproxy/gateway/issues/60">Issue #60&lt;/a>。&lt;/li>
&lt;li>建立初步测试、e2e、集成等 - &lt;a href="https://github.com/envoyproxy/gateway/issues/64">Issue #64&lt;/a>。&lt;/li>
&lt;li>建立用户和开发人员项目文档 - &lt;a href="https://github.com/envoyproxy/gateway/issues/17">Issue #17&lt;/a>。&lt;/li>
&lt;li>实现 Gateway API 一致性（例如路由、LB、标头转换等）- &lt;a href="https://github.com/envoyproxy/gateway/issues/65">Issue #65&lt;/a>。&lt;/li>
&lt;li>设置 CI/CD 流程 - &lt;a href="https://github.com/envoyproxy/gateway/issues/63">Issue #63&lt;/a>。&lt;/li>
&lt;/ul>
&lt;h3 id="v030v030-通过扩展机制驱动高级功能">&lt;a href="https://github.com/envoyproxy/gateway/milestone/7">v0.3.0&lt;/a>: 通过扩展机制驱动高级功能&lt;a class="td-heading-self-link" href="#v030v030-%e9%80%9a%e8%bf%87%e6%89%a9%e5%b1%95%e6%9c%ba%e5%88%b6%e9%a9%b1%e5%8a%a8%e9%ab%98%e7%ba%a7%e5%8a%9f%e8%83%bd" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>支持扩展 Gateway API 字段 &lt;a href="https://github.com/envoyproxy/gateway/issues/707">Issue #707&lt;/a>。&lt;/li>
&lt;li>支持实验性 Gateway API，例如 TCPRoute &lt;a href="https://github.com/envoyproxy/gateway/issues/643">Issue #643&lt;/a>、UDPRoute &lt;a href="https://github.com/envoyproxy/gateway/issues/641">Issue #641&lt;/a> 和 GRPCRoute &lt;a href="https://github.com/envoyproxy/gateway/issues/642">Issue #642&lt;/a>。&lt;/li>
&lt;li>制定利用 Gateway API 扩展的指南 &lt;a href="https://github.com/envoyproxy/gateway/issues/675">Issue #675&lt;/a>。&lt;/li>
&lt;li>限流 &lt;a href="https://github.com/envoyproxy/gateway/issues/670">Issue #670&lt;/a>。&lt;/li>
&lt;li>认证 &lt;a href="https://github.com/envoyproxy/gateway/issues/336">Issue #336&lt;/a>。&lt;/li>
&lt;/ul>
&lt;h3 id="v040v040-自定义-envoy-gateway">&lt;a href="https://github.com/envoyproxy/gateway/milestone/12">v0.4.0&lt;/a>: 自定义 Envoy Gateway&lt;a class="td-heading-self-link" href="#v040v040-%e8%87%aa%e5%ae%9a%e4%b9%89-envoy-gateway" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>扩展 Envoy Gateway 控制平面 &lt;a href="https://github.com/envoyproxy/gateway/issues/20">Issue #20&lt;/a>&lt;/li>
&lt;li>基于 Helm 的 Envoy Gateway 安装 &lt;a href="https://github.com/envoyproxy/gateway/issues/650">Issue #650&lt;/a>&lt;/li>
&lt;li>自定义被管理的 Envoy Proxy Kubernetes 资源字段 &lt;a href="https://github.com/envoyproxy/gateway/issues/648">Issue #648&lt;/a>&lt;/li>
&lt;li>配置 xDS Bootstrap &lt;a href="https://github.com/envoyproxy/gateway/issues/31">Issue #31&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="v050v050-可观察性和扩缩容">&lt;a href="https://github.com/envoyproxy/gateway/milestone/13">v0.5.0&lt;/a>: 可观察性和扩缩容&lt;a class="td-heading-self-link" href="#v050v050-%e5%8f%af%e8%a7%82%e5%af%9f%e6%80%a7%e5%92%8c%e6%89%a9%e7%bc%a9%e5%ae%b9" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>数据平面的可观察性 &lt;a href="https://github.com/envoyproxy/gateway/issues/699">Issue #699&lt;/a>。&lt;/li>
&lt;li>允许用户配置 xDS 资源 &lt;a href="https://github.com/envoyproxy/gateway/issues/24">Issue #24&lt;/a>。&lt;/li>
&lt;/ul>
&lt;h3 id="v060v060-为-ga-做准备">&lt;a href="https://github.com/envoyproxy/gateway/milestone/15">v0.6.0&lt;/a>: 为 GA 做准备&lt;a class="td-heading-self-link" href="#v060v060-%e4%b8%ba-ga-%e5%81%9a%e5%87%86%e5%a4%87" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>控制平面的可观察性 &lt;a href="https://github.com/envoyproxy/gateway/issues/700">Issue #700&lt;/a>。&lt;/li>
&lt;li>计算并记录 Envoy Gateway 性能 &lt;a href="https://github.com/envoyproxy/gateway/issues/1365">Issue #1365&lt;/a>。&lt;/li>
&lt;li>添加 TrafficPolicy API 以实现高级功能 &lt;a href="https://github.com/envoyproxy/gateway/issues/1492">Issue #1492&lt;/a>。&lt;/li>
&lt;li>Envoy Gateway 满足就绪标准 &lt;a href="https://github.com/envoyproxy/gateway/issues/1160">Issue #1160&lt;/a>。&lt;/li>
&lt;/ul></description></item><item><title>开发者指南</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/develop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/develop/</guid><description>&lt;p>Envoy Gateway 使用基于 &lt;a href="https://www.gnu.org/software/make/">make&lt;/a> 的构建系统进行构建。我们的 CI 使用基于 &lt;a href="https://docs.github.com/en/actions">Github Actions&lt;/a> 的&lt;a href="https://github.com/envoyproxy/gateway/tree/main/.github/workflows">工作流&lt;/a>建设。&lt;/p>
&lt;h2 id="prerequisites">先决条件&lt;a class="td-heading-self-link" href="#prerequisites" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h3 id="go">go&lt;a class="td-heading-self-link" href="#go" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>版本：1.20&lt;/li>
&lt;li>安装指南：https://go.dev/doc/install&lt;/li>
&lt;/ul>
&lt;h3 id="make">make&lt;a class="td-heading-self-link" href="#make" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>推荐版本：4.0 或更高&lt;/li>
&lt;li>安装指南：https://www.gnu.org/software/make&lt;/li>
&lt;/ul>
&lt;h3 id="docker">docker&lt;a class="td-heading-self-link" href="#docker" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>当您想要构建 Docker 镜像或在 Docker 内运行 &lt;code>make&lt;/code> 时可选。&lt;/li>
&lt;li>推荐版本：20.10.16&lt;/li>
&lt;li>安装指南：https://docs.docker.com/engine/install&lt;/li>
&lt;/ul>
&lt;h3 id="python3">python3&lt;a class="td-heading-self-link" href="#python3" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>需要一个 &lt;code>python3&lt;/code> 程序&lt;/li>
&lt;li>必须有一个正常运行的 &lt;code>venv&lt;/code> 模块；这是标准库的一部分，但某些发行版使用 stub 将其替换（例如 Debian 和 Ubuntu），
并要求您单独安装 &lt;code>python3-venv&lt;/code> 包。&lt;/li>
&lt;/ul>
&lt;h2 id="quickstart">快速开始&lt;a class="td-heading-self-link" href="#quickstart" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>运行 &lt;code>make help&lt;/code> 以查看构建、测试和运行 Envoy Gateway 的所有可用目标。&lt;/li>
&lt;/ul>
&lt;h3 id="building">构建&lt;a class="td-heading-self-link" href="#building" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>运行 &lt;code>make build&lt;/code> 来构建所有二进制文件。&lt;/li>
&lt;li>运行 &lt;code>make build BINS=&amp;quot;envoy-gateway&amp;quot;&lt;/code> 来构建 Envoy Gateway 二进制文件。&lt;/li>
&lt;li>运行 &lt;code>make build BINS=&amp;quot;egctl&amp;quot;&lt;/code> 来构建 egctl 二进制文件。&lt;/li>
&lt;/ul>
&lt;p>**注意：**二进制文件在 &lt;code>bin/$OS/$ARCH&lt;/code> 目录中生成，例如，&lt;code>bin/linux/amd64/&lt;/code>。&lt;/p></description></item><item><title>贡献</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/contributing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/contributing/</guid><description>&lt;p>我们欢迎来自社区的贡献。请仔细查看&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/about">项目目标&lt;/a>和以下指南，以简化您的贡献流程。&lt;/p>
&lt;h2 id="communication">沟通&lt;a class="td-heading-self-link" href="#communication" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>在开始开发主要功能之前，请通过 GitHub 或 Slack 联系我们。
我们将确保没有其他人正在处理此问题，并要求您创建 GitHub Issue。&lt;/li>
&lt;li>“主要功能”定义为超过 100 个 LOC 的任意更改（不包括测试），
或更改任何面向用户的行为。我们将使用 GitHub Issue 来讨论该功能并达成一致。
这是为了防止浪费您和我们的时间。主要功能的 GitHub 审核流程也很重要，
以便&lt;a href="../codeowners">与提交权限的干系者&lt;/a>可以就设计达成一致。
如果适合编写设计文档，则该文档必须托管在 GitHub Issue 中，或者托管在公开可读的位置并链接到 Issue 中。&lt;/li>
&lt;li>小补丁和错误修复不需要事先沟通。&lt;/li>
&lt;/ul>
&lt;h2 id="inclusivity">包容性&lt;a class="td-heading-self-link" href="#inclusivity" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Envoy Gateway 社区的一个明确的目标是完全包容性。
因此，所有 PR 的所有代码、API 和文档都必须遵守以下准则：&lt;/p>
&lt;ul>
&lt;li>不允许使用以下单词和短语：
&lt;ul>
&lt;li>&lt;strong>Whitelist&lt;/strong>：使用 allowlist 代替。&lt;/li>
&lt;li>&lt;strong>Blacklist&lt;/strong>：使用 denylist 或 blocklist 代替。&lt;/li>
&lt;li>&lt;strong>Master&lt;/strong>：使用 primary 代替。&lt;/li>
&lt;li>&lt;strong>Slave&lt;/strong>：使用 secondary 或 replica 代替。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>文档应该以包容的风格编写。
&lt;a href="https://developers.google.com/style/inclusive-documentation">Google 开发人员文档&lt;/a>包含有关此主题的出色参考。&lt;/li>
&lt;li>上述政策并非最终政策，未来可能会随着行业最佳实践的发展而进行修改。
维护人员在代码审查期间可能会提供有关此主题的其他评论。&lt;/li>
&lt;/ul>
&lt;h2 id="submitting-a-pr">提交一个 PR&lt;a class="td-heading-self-link" href="#submitting-a-pr" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>Fork 该仓库。&lt;/li>
&lt;li>修改。&lt;/li>
&lt;li>对每次提交都进行 DCO 签署。这可以通过 &lt;code>git commit -s&lt;/code> 来完成。&lt;/li>
&lt;li>提交您的 PR。&lt;/li>
&lt;li>将为您自动运行测试。&lt;/li>
&lt;li>我们&lt;strong>不会&lt;/strong>合并任何未通过测试的 PR。&lt;/li>
&lt;li>PR 预计对添加的代码具有 100% 的测试覆盖率。这可以通过覆盖范围构建来验证。
如果您的 PR 由于某种原因无法被 100% 覆盖，请在创建时明确解释原因。&lt;/li>
&lt;li>任何更改面向用户行为的 PR &lt;strong>必须&lt;/strong>在仓库中的
&lt;a href="https://github.com/envoyproxy/gateway/tree/main/site">docs&lt;/a> 文件夹中具有关联的文档以及&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/releasing/">变更日志&lt;/a>。&lt;/li>
&lt;li>所有代码注释和文档均应具有正确的英语语法和标点符号。
如果您的英语不流利（或者是一个糟糕的写作者 ;-)），请告诉我们，我们会尽力为您寻求帮助，但不能保证。&lt;/li>
&lt;li>您的 PR 标题应该是描述性的，通常以包含子系统名称的类型开头，
如有必要，带有 &lt;code>()&lt;/code>，摘要后跟冒号。格式例子如下：
&lt;ul>
&lt;li>&amp;ldquo;docs: fix grammar error&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;feat(translator): add new feature&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;fix: fix xx bug&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;chore: change ci &amp;amp; build tools etc&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>当您的 PR 被合并时，您的 PR 提交消息将用作其提交消息。
如果您的 PR 在审核期间出现分歧，您应该更新此字段。&lt;/li>
&lt;li>您的 PR 描述应详细说明 PR 的用途。如果它修复了现有问题，则应以“Fixes #XXX”结尾。&lt;/li>
&lt;li>如果您的 PR 是共同创作的或基于其他贡献者的早期 PR，
请注明 &lt;code>Co-authored-by: name &amp;lt;name@example.com&amp;gt;&lt;/code>。
有关更多详细信息，请参阅 GitHub 的&lt;a href="https://docs.github.com/zh/pull-requests/committing-changes-to-your-project/creating-and-editing-commits/creating-a-commit-with-multiple-authors">多作者指南&lt;/a>。&lt;/li>
&lt;li>当所有测试都通过并且满足本文所述的所有其他条件时，将指派维护人员审查并合并 PR。&lt;/li>
&lt;li>一旦您提交了 PR，&lt;strong>请不要对其进行 Rebase&lt;/strong>。
如果后续提交是新提交和/或合并，则检查起来要容易得多。我们会压缩并合并，因此 PR 中的提交数量并不重要。&lt;/li>
&lt;li>我们预计，一旦 PR 被开启，它将被积极处理，直到它被合并或关闭。
我们保留关闭没有取得进展的 PR 的权利。这通常定义为 7 天内没有变化。
显然，由于缺乏活跃度而被关闭的 PR 可以稍后重新开启。
关闭过时的 PR 有助于我们掌控当前正在进行的所有工作。&lt;/li>
&lt;/ul>
&lt;h2 id="maintainer-pr-review-policy">维护者 PR 审查策略&lt;a class="td-heading-self-link" href="#maintainer-pr-review-policy" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>请参阅 &lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/codeowners/">CODEOWNERS.md&lt;/a> 了解当前的维护者列表。&lt;/li>
&lt;li>需要由代表与 PR 所有者不同的隶属关系的维护者来审查和批准 PR。&lt;/li>
&lt;li>当项目成熟时，预计 PR 涉及代码的“领域专家”应该对 PR 进行审查。
此人不需要提交权限，只需要领域知识。&lt;/li>
&lt;li>对于仅更新文档或评论，
或对测试和工具进行细微更改（其中细微更改由相关维护者决定）的 PR，可以免除上述规则。&lt;/li>
&lt;li>如果有关于谁应该审查 PR 的问题，请在 Slack 中讨论。&lt;/li>
&lt;li>欢迎任何人审查他们想要审查的任何 PR，无论他们是否是维护者。&lt;/li>
&lt;li>如果 PR 在审核期间发生重大变化，请确保更新 PR 标题、提交消息和描述。&lt;/li>
&lt;li>合并前请&lt;strong>清理标题和正文&lt;/strong>。默认情况下，GitHub 使用原始标题填充压缩合并标题，
并使用 PR 中的每个单独提交填充提交正文。进行合并的维护者应确保标题遵循上述准则，
并应使用 PR 的原始提交消息覆盖正文（如有必要，请将其清理），同时保留 PR 作者的最终 DCO 签名。&lt;/li>
&lt;/ul>
&lt;h2 id="decision-making">决策&lt;a class="td-heading-self-link" href="#decision-making" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>这是一个新的、复杂的项目，我们需要很快做出很多决定。
为此，我们确定了做出（可能有争议的）决定的流程：&lt;/p></description></item><item><title>参与 Envoy Gateway 文档工作</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/docs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/docs/</guid><description>&lt;p>Envoy Gateway 的文档位于 &lt;code>site/content/en&lt;/code> 目录中（中文内容位于 &lt;code>site/content/zh&lt;/code> 目录中）。
任何单独的文档都可以使用 &lt;a href="https://daringfireball.net/projects/markdown/syntax">Markdown&lt;/a> 编写。&lt;/p>
&lt;h2 id="documentation-structure">文档结构&lt;a class="td-heading-self-link" href="#documentation-structure" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>我们现在支持版本化的文档，文档下的目录名代表了文档的版本。
最新站点的根目录位于 &lt;code>site/content/en/latest&lt;/code> 中。
如果您想了解这些内容如何组合在一起，可以由此处开始。&lt;/p>
&lt;p>请注意，新内容应被添加到 &lt;code>site/content/en/latest&lt;/code> 中，
并将在下一个版本中被截断。&lt;code>site/content/en/v0.5.0&lt;/code> 下的内容是自动生成的，
通常不需要对其进行更改，除非您发现当前发布页面有一些不正确的内容。
如果是这样，您应该提交 PR 来一并更新 &lt;code>site/content/en/latest&lt;/code> 和 &lt;code>site/content/en/v0.5.0&lt;/code> 的内容。&lt;/p>
&lt;p>您可以默认访问代表当前版本的网站内容，
也可以在&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest">此处&lt;/a>或页面的页脚处访问包含最新版本变更的网站。&lt;/p>
&lt;h2 id="documentation-workflow">文档工作流程&lt;a class="td-heading-self-link" href="#documentation-workflow" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>要参与文档工作，只需编辑 &lt;code>site/content/en/latest&lt;/code> 中的 Markdown 文件，然后运行：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>make docs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这将使用被构建的 HTML 页面创建 &lt;code>site/public&lt;/code>。您可以通过运行以下命令来预览它：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>make docs-serve
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果您想生成文档的新发布版本，例如 &lt;code>v0.6.0&lt;/code>，请运行：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>make docs-release &lt;span style="color:#000">TAG&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>v0.6.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>该操作将更新项目根目录下的 VERSION 文件，该文件记录当前发布的版本，
并将在页面版本上下文和二进制版本输出中被使用。此外，这将生成新的目录 &lt;code>site/content/en/v0.6.0&lt;/code>，
其中包含 v0.6.0 的文档，如 &lt;code>/api&lt;/code>、&lt;code>/install&lt;/code> 等。&lt;/p>
&lt;h2 id="publishing-docs">发布文档&lt;a class="td-heading-self-link" href="#publishing-docs" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>每当文档被推送到 &lt;code>main&lt;/code> 分支时，CI 都会将构建的文档发布到 GitHub Pages。
有关更多详细信息，请参阅 &lt;code>.github/workflows/docs.yaml&lt;/code>。&lt;/p></description></item><item><title>发布流程</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/releasing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/releasing/</guid><description>&lt;p>本文档指导维护人员完成创建 Envoy Gateway 版本的过程。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/releasing/#release-candidate">候选版本&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/releasing/#prerequisites">先决条件&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/releasing/#setup-cherry-picker-action">设置 Cherry Picker Action&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/releasing/#minor-release">次要版本&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/releasing/#prerequisites-1">先决条件&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/releasing/#announce-the-release">公告发布&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="release-candidate">候选版本&lt;a class="td-heading-self-link" href="#release-candidate" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>应使用以下步骤创建候选版本。&lt;/p>
&lt;h3 id="prerequisites">先决条件&lt;a class="td-heading-self-link" href="#prerequisites" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>具备推送到 Envoy Gateway 仓库的权限。&lt;/li>
&lt;/ul>
&lt;p>设置环境变量以供后续步骤使用：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">MAJOR_VERSION&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">MINOR_VERSION&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">RELEASE_CANDIDATE_NUMBER&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">GITHUB_REMOTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>origin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>
&lt;p>克隆仓库，迁出 &lt;code>main&lt;/code> 分支，确保它是最新的，并且您的本地分支是干净的。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>创建一个主题分支，用于添加发布说明并使用发布版本更新 &lt;a href="https://github.com/envoyproxy/gateway/blob/main/VERSION">VERSION&lt;/a> 文件。
请参阅之前的&lt;a href="https://github.com/envoyproxy/gateway/tree/main/release-notes">发布说明&lt;/a>和 &lt;a href="https://github.com/envoyproxy/gateway/blob/main/VERSION">VERSION&lt;/a> 了解更多详细信息。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>签名、提交更改并将其推送到您 Fork 的分支。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>提交 &lt;a href="https://github.com/envoyproxy/gateway/pulls">Pull Request&lt;/a> 将更改合并到 &lt;code>main&lt;/code> 分支中。
在您的 PR 合并并且&lt;a href="https://github.com/envoyproxy/gateway/blob/main/.github/workflows/build_and_test.yaml">构建和测试&lt;/a>成功完成之前，请勿继续。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>从 &lt;code>main&lt;/code> 创建一个新的发布分支。发布分支应命名为
&lt;code>release/v${MAJOR_VERSION}.${MINOR_VERSION}&lt;/code>，例如 &lt;code>release/v0.3&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git checkout -b release/v&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">MAJOR_VERSION&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>.&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">MINOR_VERSION&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>将分支推送到 Envoy Gateway 仓库。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git push &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">GITHUB_REMOTE&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> release/v&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">MAJOR_VERSION&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>.&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">MINOR_VERSION&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>创建主题分支，用于将 Envoy Proxy 镜像和 Envoy Ratelimit 镜像更新为版本支持的 Tag。
有关更新镜像 Tag 的更多详细信息，请参阅 &lt;a href="https://github.com/envoyproxy/gateway/pull/2098">PR #2098&lt;/a>。&lt;/p></description></item><item><title>维护者</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/codeowners/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/codeowners/</guid><description>&lt;h2 id="the-following-maintainers-listed-in-alphabetical-order-own-everything">以下是拥有所有权限的维护者（按字母顺序排列）&lt;a class="td-heading-self-link" href="#the-following-maintainers-listed-in-alphabetical-order-own-everything" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>@arkodg&lt;/li>
&lt;li>@qicz&lt;/li>
&lt;li>@Xunzhuo&lt;/li>
&lt;li>@zirain&lt;/li>
&lt;li>@zhaohuabing&lt;/li>
&lt;/ul>
&lt;h2 id="emeritus-maintainers">荣誉退休维护者&lt;a class="td-heading-self-link" href="#emeritus-maintainers" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>@alexgervais&lt;/li>
&lt;li>@danehans&lt;/li>
&lt;li>@LukeShu&lt;/li>
&lt;li>@skriss&lt;/li>
&lt;li>@youngnick&lt;/li>
&lt;li>@Alice-Lilith&lt;/li>
&lt;/ul></description></item><item><title>文档内容编写规范（中文）</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/docs_standard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/docs_standard/</guid><description>&lt;p>中文内容的位置在 &lt;code>site/content/zh&lt;/code> 目录中，具体内容和结构应与英文版本保持一致。&lt;/p>
&lt;h2 id="standard">规范&lt;a class="td-heading-self-link" href="#standard" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>以下定义了一些编写规范，并提供示例和对应 Markdown 写法。&lt;/p>
&lt;h3 id="mixed-chinese-and-english">中英文混排&lt;a class="td-heading-self-link" href="#mixed-chinese-and-english" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>当内容中存在中文和英文混排的时候中英文间需要加一个空格，
中文与中文之间无需空格（即使某个中文是链路的一部分也不需要空格）：&lt;/p>
&lt;p>&lt;strong>示例：&lt;/strong>&lt;/p>
&lt;p>这里有中文和 English 混排。
可以跳转到&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/docs_standard/#standard">规范&lt;/a>处重新阅读。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-md" data-lang="md">&lt;span style="display:flex;">&lt;span>这里有中文和 English 混排。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>可以跳转到[规范](#standard)处重新阅读。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="bold">粗体&lt;a class="td-heading-self-link" href="#bold" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>在中文内容中建议一律使用两个星号表示粗体：&lt;/p>
&lt;p>&lt;strong>示例：&lt;/strong>&lt;/p>
&lt;p>其中&lt;strong>非常重要&lt;/strong>的内容是&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-md" data-lang="md">&lt;span style="display:flex;">&lt;span>其中**非常重要**的内容是
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="punctuation">标点符号&lt;a class="td-heading-self-link" href="#punctuation" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>中文内容中遇到的标点符号都要用全角，
无论中英文内容与全角标点符号之间无需空格（即使某个中文是在加粗格式之中也不需要空格）&lt;/p>
&lt;p>&lt;strong>示例：&lt;/strong>&lt;/p>
&lt;p>无法确认吗？确认无误（没有任何拼写错误）后，可以继续后面的步骤。
安装 Envoy Gateway（通过命令）&lt;strong>结束后&lt;/strong>，查看相关 Service。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-md" data-lang="md">&lt;span style="display:flex;">&lt;span>无法确认吗？确认无误（没有任何拼写错误）后，可以继续后面的步骤。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>安装 Envoy Gateway（通过命令）**结束后**，查看相关 Service。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="anchor">锚&lt;a class="td-heading-self-link" href="#anchor" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>标题要添加英文锚（anchor），用于在其他内容中保持引用定位的一致性：&lt;/p>
&lt;p>&lt;strong>示例：&lt;/strong>&lt;/p>
&lt;h4 id="example">示例&lt;a class="td-heading-self-link" href="#example" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-md" data-lang="md">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#800080;font-weight:bold">#### 示例 {#example}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="no-need-for-translation">无需翻译的情况&lt;a class="td-heading-self-link" href="#no-need-for-translation" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>如果内容中的英文是命令，特定专有名词，如 CRD 名称，协议名称等，请保持大小写与原本定义一致：&lt;/p>
&lt;p>&lt;strong>示例：&lt;/strong>&lt;/p>
&lt;p>使用 curl 命令发起 HTTP 请求。
在 kind 集群中添加 Gateway 资源，创建 Service 和 Deployment。&lt;/p></description></item><item><title>行为准则</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/code_of_conduct/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/code_of_conduct/</guid><description>&lt;p>Envoy Gateway 遵循
&lt;a href="https://github.com/cncf/foundation/blob/main/code-of-conduct-languages/zh.md">CNCF 行为准则&lt;/a>。&lt;/p></description></item></channel></rss>