<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Envoy Gateway</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/</link><description>Recent content on Envoy Gateway</description><generator>Hugo</generator><language>zh</language><atom:link href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Helm 安装</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/install/install-helm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/install/install-helm/</guid><description>&lt;p>&lt;a href="https://helm.sh">Helm&lt;/a> 是 Kubernetes 的包管理器，可自动在 Kubernetes 上发布和管理软件。&lt;/p>
&lt;p>Envoy Gateway 可以通过 Helm Chart 经过几个简单的步骤进行安装，
具体取决于您是首次部署、从现有安装升级 Envoy Gateway 还是从 Envoy Gateway 迁移。&lt;/p>
&lt;h2 id="before-you-begin">开始之前&lt;a class="td-heading-self-link" href="#before-you-begin" aria-label="Heading self-link">&lt;/a>&lt;/h2>


&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">兼容性矩阵&lt;/h4>

 请参阅&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/install/matrix/">版本兼容性矩阵&lt;/a>了解更多信息。

&lt;/div>

&lt;p>Envoy Gateway Helm Chart 托管在 DockerHub 中。&lt;/p>
&lt;p>它发布在 &lt;code>oci://docker.io/envoyproxy/gateway-helm&lt;/code>。&lt;/p>


&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">注意&lt;/h4>

 &lt;p>我们使用 &lt;code>v0.0.0-latest&lt;/code> 作为最新的开发版本。&lt;/p>
&lt;p>您可以访问 &lt;a href="https://hub.docker.com/r/envoyproxy/gateway-helm/tags">Envoy Gateway Helm Chart&lt;/a> 了解更多版本。&lt;/p>


&lt;/div>

&lt;h2 id="install-with-helm">使用 Helm 安装&lt;a class="td-heading-self-link" href="#install-with-helm" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Envoy Gateway 通常从命令行部署到 Kubernetes。如果您没有 Kubernetes，则应该使用 &lt;code>kind&lt;/code> 来创建一个。&lt;/p>


&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">开发者指南&lt;/h4>

 请参阅&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/develop/">开发者指南&lt;/a>了解更多信息。

&lt;/div>

&lt;p>安装 Gateway API CRD 和 Envoy Gateway：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>helm install eg oci://docker.io/envoyproxy/gateway-helm --version v0.0.0-latest -n envoy-gateway-system --create-namespace
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>等待 Envoy Gateway 变为可用：&lt;/p></description></item><item><title>使用 Kubernetes YAML 安装</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/install/install-yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/install/install-yaml/</guid><description>&lt;p>此任务将引导您完成在 Kubernetes 集群中安装 Envoy Gateway。&lt;/p>
&lt;p>手动安装过程不允许像 &lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/install/install-helm/">Helm 安装方法&lt;/a>那样对配置进行更多控制，
因此如果您需要对 Envoy Gateway 安装进行更多控制，建议您使用 Helm。&lt;/p>
&lt;h2 id="before-you-begin">开始之前&lt;a class="td-heading-self-link" href="#before-you-begin" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Envoy Gateway 设计为在 Kubernetes 中运行以进行生产。最重要的要求是：&lt;/p>
&lt;ul>
&lt;li>Kubernetest 1.25+ 版本&lt;/li>
&lt;li>&lt;code>kubectl&lt;/code> 命令行工具&lt;/li>
&lt;/ul>


&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">兼容性矩阵&lt;/h4>

 请参阅&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/install/matrix/">版本兼容性矩阵&lt;/a>了解更多信息。

&lt;/div>

&lt;h2 id="install-with-yaml">使用 YAML 安装&lt;a class="td-heading-self-link" href="#install-with-yaml" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Envoy Gateway 通常从命令行部署到 Kubernetes。如果您没有 Kubernetes，则应该使用 &lt;code>kind&lt;/code> 来创建一个。&lt;/p>


&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">开发者指南&lt;/h4>

 请参阅&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/develop/">开发者指南&lt;/a>了解更多信息。

&lt;/div>

&lt;ol>
&lt;li>
&lt;p>在终端中，运行以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl apply -f https://github.com/envoyproxy/gateway/releases/download/latest/install.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>后续步骤&lt;/p>
&lt;p>Envoy Gateway 现在应该已成功安装并运行，但是为了体验 Envoy Gateway 的更多功能，您可以参考&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/tasks/">任务&lt;/a>。&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>使用自定义证书的控制平面身份验证</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/install/custom-cert/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/install/custom-cert/</guid><description>&lt;p>Envoy Gateway 为 Envoy Gateway Pod 和 Envoy 代理队列之间的控制平面通信建立了安全的 TLS 连接。
此处使用的 TLS 证书是自签名的，并使用在创建 Envoy Gateway 之前运行的 Job 生成，
并且这些证书被安装到 Envoy Gateway 和 Envoy 代理 Pod 上。&lt;/p>
&lt;p>此任务将引导您完成为控制平面身份验证配置自定义证书。&lt;/p>
&lt;h2 id="before-you-begin">开始之前&lt;a class="td-heading-self-link" href="#before-you-begin" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>我们使用 Cert-Manager 来管理证书。
您可以按照&lt;a href="https://cert-manager.io/docs/installation/kubernetes/">官方指南&lt;/a>安装它。&lt;/p>
&lt;h2 id="configure-custom-certs-for-control-plane">为控制平面配置自定义证书&lt;a class="td-heading-self-link" href="#configure-custom-certs-for-control-plane" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>首先您需要设置 CA 颁发者，在此任务中，我们以 &lt;code>selfsigned-issuer&lt;/code> 为例。&lt;/p>
&lt;p>&lt;strong>您不应在生产中使用自签名颁发者，您应该使用真实的 CA 颁发者。&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: cert-manager.io/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Issuer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app.kubernetes.io/name: envoy-gateway
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: selfsigned-issuer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> selfSigned: {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: cert-manager.io/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Certificate
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: envoy-gateway-ca
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> isCA: true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> commonName: envoy-gateway
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> secretName: envoy-gateway-ca
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> privateKey:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> algorithm: RSA
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> size: 2048
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> issuerRef:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: selfsigned-issuer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kind: Issuer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> group: cert-manager.io
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: cert-manager.io/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Issuer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app.kubernetes.io/name: envoy-gateway
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: eg-issuer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ca:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> secretName: envoy-gateway-ca
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>为 Envoy Gateway 控制器创建一个证书，该证书将存储在 &lt;code>envoy-gatewy&lt;/code> Secret 中。&lt;/p></description></item><item><title>路线图</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/roadmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/roadmap/</guid><description>&lt;p>本文档可作为 Envoy Gateway 用户和贡献者了解项目方向的高级参考。&lt;/p>
&lt;h2 id="contributing-to-the-roadmap">为路线图做出贡献&lt;a class="td-heading-self-link" href="#contributing-to-the-roadmap" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>要将功能添加到路线图中，请创建 &lt;a href="https://github.com/envoyproxy/gateway/issues">Issue&lt;/a> 或加入&lt;a href="https://docs.google.com/document/d/1leqwsHX8N-XxNEyTflYjRur462ukFxd19Rnk3Uzy55I/edit?usp=sharing">社区会议&lt;/a>来讨论您的用例。
如果您的功能被接受，维护人员会将您的 Issue 分配到&lt;a href="https://github.com/envoyproxy/gateway/milestones">发布里程碑&lt;/a>并相应地更新此文档。&lt;/li>
&lt;li>为了帮助解决现有的路线图项，请对相关 Issue 进行评论或将自己分配到该 Issue。&lt;/li>
&lt;li>如果路线图项没有 Issue，请创建一个 Issue，将自己分配到该 Issue，并参考此文档。
维护者将提交 &lt;a href="https://github.com/envoyproxy/gateway/compare">Pull Request&lt;/a> 以将该功能添加到路线图中。
**注意：**在实现该功能之前，应在 Issue 或社区会议上讨论该功能。&lt;/li>
&lt;/ul>
&lt;p>如果您不知道从哪里开始贡献，需要帮助来减少技术、自动化和文档债务。查找带有 &lt;code>help wanted&lt;/code> 标签的 Issue 以开始。&lt;/p>
&lt;h2 id="details">细节&lt;a class="td-heading-self-link" href="#details" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>路线图功能和时间表可能会根据反馈、社区贡献等而改变。
如果您依赖特定的路线图项，我们鼓励您参加社区会议讨论细节，或者通过为项目做出贡献来帮助我们提供该功能。&lt;/p>
&lt;p>&lt;code>最后更新时间：2023 年 4 月&lt;/code>&lt;/p>
&lt;h3 id="v020v020-建立坚实的基础">&lt;a href="https://github.com/envoyproxy/gateway/milestone/1">v0.2.0&lt;/a>: 建立坚实的基础&lt;a class="td-heading-self-link" href="#v020v020-%e5%bb%ba%e7%ab%8b%e5%9d%9a%e5%ae%9e%e7%9a%84%e5%9f%ba%e7%a1%80" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>完成核心 Envoy Gateway 实现 - &lt;a href="https://github.com/envoyproxy/gateway/issues/60">Issue #60&lt;/a>。&lt;/li>
&lt;li>建立初步测试、e2e、集成等 - &lt;a href="https://github.com/envoyproxy/gateway/issues/64">Issue #64&lt;/a>。&lt;/li>
&lt;li>建立用户和开发人员项目文档 - &lt;a href="https://github.com/envoyproxy/gateway/issues/17">Issue #17&lt;/a>。&lt;/li>
&lt;li>实现 Gateway API 一致性（例如路由、LB、标头转换等）- &lt;a href="https://github.com/envoyproxy/gateway/issues/65">Issue #65&lt;/a>。&lt;/li>
&lt;li>设置 CI/CD 流程 - &lt;a href="https://github.com/envoyproxy/gateway/issues/63">Issue #63&lt;/a>。&lt;/li>
&lt;/ul>
&lt;h3 id="v030v030-通过扩展机制驱动高级功能">&lt;a href="https://github.com/envoyproxy/gateway/milestone/7">v0.3.0&lt;/a>: 通过扩展机制驱动高级功能&lt;a class="td-heading-self-link" href="#v030v030-%e9%80%9a%e8%bf%87%e6%89%a9%e5%b1%95%e6%9c%ba%e5%88%b6%e9%a9%b1%e5%8a%a8%e9%ab%98%e7%ba%a7%e5%8a%9f%e8%83%bd" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>支持扩展 Gateway API 字段 &lt;a href="https://github.com/envoyproxy/gateway/issues/707">Issue #707&lt;/a>。&lt;/li>
&lt;li>支持实验性 Gateway API，例如 TCPRoute &lt;a href="https://github.com/envoyproxy/gateway/issues/643">Issue #643&lt;/a>、UDPRoute &lt;a href="https://github.com/envoyproxy/gateway/issues/641">Issue #641&lt;/a> 和 GRPCRoute &lt;a href="https://github.com/envoyproxy/gateway/issues/642">Issue #642&lt;/a>。&lt;/li>
&lt;li>制定利用 Gateway API 扩展的指南 &lt;a href="https://github.com/envoyproxy/gateway/issues/675">Issue #675&lt;/a>。&lt;/li>
&lt;li>限流 &lt;a href="https://github.com/envoyproxy/gateway/issues/670">Issue #670&lt;/a>。&lt;/li>
&lt;li>认证 &lt;a href="https://github.com/envoyproxy/gateway/issues/336">Issue #336&lt;/a>。&lt;/li>
&lt;/ul>
&lt;h3 id="v040v040-自定义-envoy-gateway">&lt;a href="https://github.com/envoyproxy/gateway/milestone/12">v0.4.0&lt;/a>: 自定义 Envoy Gateway&lt;a class="td-heading-self-link" href="#v040v040-%e8%87%aa%e5%ae%9a%e4%b9%89-envoy-gateway" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>扩展 Envoy Gateway 控制平面 &lt;a href="https://github.com/envoyproxy/gateway/issues/20">Issue #20&lt;/a>&lt;/li>
&lt;li>基于 Helm 的 Envoy Gateway 安装 &lt;a href="https://github.com/envoyproxy/gateway/issues/650">Issue #650&lt;/a>&lt;/li>
&lt;li>自定义被管理的 Envoy Proxy Kubernetes 资源字段 &lt;a href="https://github.com/envoyproxy/gateway/issues/648">Issue #648&lt;/a>&lt;/li>
&lt;li>配置 xDS Bootstrap &lt;a href="https://github.com/envoyproxy/gateway/issues/31">Issue #31&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="v050v050-可观察性和扩缩容">&lt;a href="https://github.com/envoyproxy/gateway/milestone/13">v0.5.0&lt;/a>: 可观察性和扩缩容&lt;a class="td-heading-self-link" href="#v050v050-%e5%8f%af%e8%a7%82%e5%af%9f%e6%80%a7%e5%92%8c%e6%89%a9%e7%bc%a9%e5%ae%b9" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>数据平面的可观察性 &lt;a href="https://github.com/envoyproxy/gateway/issues/699">Issue #699&lt;/a>。&lt;/li>
&lt;li>允许用户配置 xDS 资源 &lt;a href="https://github.com/envoyproxy/gateway/issues/24">Issue #24&lt;/a>。&lt;/li>
&lt;/ul>
&lt;h3 id="v060v060-为-ga-做准备">&lt;a href="https://github.com/envoyproxy/gateway/milestone/15">v0.6.0&lt;/a>: 为 GA 做准备&lt;a class="td-heading-self-link" href="#v060v060-%e4%b8%ba-ga-%e5%81%9a%e5%87%86%e5%a4%87" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>控制平面的可观察性 &lt;a href="https://github.com/envoyproxy/gateway/issues/700">Issue #700&lt;/a>。&lt;/li>
&lt;li>计算并记录 Envoy Gateway 性能 &lt;a href="https://github.com/envoyproxy/gateway/issues/1365">Issue #1365&lt;/a>。&lt;/li>
&lt;li>添加 TrafficPolicy API 以实现高级功能 &lt;a href="https://github.com/envoyproxy/gateway/issues/1492">Issue #1492&lt;/a>。&lt;/li>
&lt;li>Envoy Gateway 满足就绪标准 &lt;a href="https://github.com/envoyproxy/gateway/issues/1160">Issue #1160&lt;/a>。&lt;/li>
&lt;/ul></description></item><item><title>快速入门</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/tasks/quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/tasks/quickstart/</guid><description>&lt;p>本指南将帮助您通过几个简单的步骤开始使用 Envoy Gateway。&lt;/p>
&lt;h2 id="prerequisites">前置条件&lt;a class="td-heading-self-link" href="#prerequisites" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>一个 Kubernetes 集群。&lt;/p>
&lt;p>&lt;strong>注意：&lt;/strong> 请参考&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/install/matrix/">兼容性表格&lt;/a>来查看所支持的 Kubernetes 版本。&lt;/p>
&lt;p>&lt;strong>注意：&lt;/strong> 如果您的 Kubernetes 集群没有负载均衡器实现，我们建议安装一个
，以便 Gateway 资源能够关联一个地址。我们推荐使用 &lt;a href="https://metallb.universe.tf/installation/">MetalLB&lt;/a>。&lt;/p>
&lt;h2 id="installation">安装&lt;a class="td-heading-self-link" href="#installation" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>安装 Gateway API CRD 和 Envoy Gateway：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>helm install eg oci://docker.io/envoyproxy/gateway-helm --version v0.0.0-latest -n envoy-gateway-system --create-namespace
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>等待 Envoy Gateway 至可用后：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl &lt;span style="color:#204a87">wait&lt;/span> --timeout&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>5m -n envoy-gateway-system deployment/envoy-gateway --for&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">condition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>Available
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装 GatewayClass，Gateway，HTTPRoute 和示例应用：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl apply -f https://github.com/envoyproxy/gateway/releases/download/latest/quickstart.yaml -n default
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>注意：&lt;/strong>&lt;a href="https://github.com/envoyproxy/gateway/releases/download/latest/quickstart.yaml">&lt;code>quickstart.yaml&lt;/code>&lt;/a> 定义了 Envoy Gateway 将侦听其全局可路由 IP 地址上端口
80 上的流量，以便轻松使用浏览器测试 Envoy Gateway。当 Envoy Gateway 看到它的侦听器使用特权端口（&amp;lt;1024），
它将在内部映射到非特权端口，因此 Envoy Gateway 不需要额外的特权。
了解此映射很重要，当您调试时您可能需要将其考虑在内。&lt;/p></description></item><item><title>开发者指南</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/develop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/develop/</guid><description>&lt;p>Envoy Gateway 使用基于 &lt;a href="https://www.gnu.org/software/make/">make&lt;/a> 的构建系统进行构建。我们的 CI 使用基于 &lt;a href="https://docs.github.com/en/actions">Github Actions&lt;/a> 的&lt;a href="https://github.com/envoyproxy/gateway/tree/main/.github/workflows">工作流&lt;/a>建设。&lt;/p>
&lt;h2 id="prerequisites">先决条件&lt;a class="td-heading-self-link" href="#prerequisites" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h3 id="go">go&lt;a class="td-heading-self-link" href="#go" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>版本：1.20&lt;/li>
&lt;li>安装指南：https://go.dev/doc/install&lt;/li>
&lt;/ul>
&lt;h3 id="make">make&lt;a class="td-heading-self-link" href="#make" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>推荐版本：4.0 或更高&lt;/li>
&lt;li>安装指南：https://www.gnu.org/software/make&lt;/li>
&lt;/ul>
&lt;h3 id="docker">docker&lt;a class="td-heading-self-link" href="#docker" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>当您想要构建 Docker 镜像或在 Docker 内运行 &lt;code>make&lt;/code> 时可选。&lt;/li>
&lt;li>推荐版本：20.10.16&lt;/li>
&lt;li>安装指南：https://docs.docker.com/engine/install&lt;/li>
&lt;/ul>
&lt;h3 id="python3">python3&lt;a class="td-heading-self-link" href="#python3" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>需要一个 &lt;code>python3&lt;/code> 程序&lt;/li>
&lt;li>必须有一个正常运行的 &lt;code>venv&lt;/code> 模块；这是标准库的一部分，但某些发行版使用 stub 将其替换（例如 Debian 和 Ubuntu），
并要求您单独安装 &lt;code>python3-venv&lt;/code> 包。&lt;/li>
&lt;/ul>
&lt;h2 id="quickstart">快速开始&lt;a class="td-heading-self-link" href="#quickstart" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>运行 &lt;code>make help&lt;/code> 以查看构建、测试和运行 Envoy Gateway 的所有可用目标。&lt;/li>
&lt;/ul>
&lt;h3 id="building">构建&lt;a class="td-heading-self-link" href="#building" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>运行 &lt;code>make build&lt;/code> 来构建所有二进制文件。&lt;/li>
&lt;li>运行 &lt;code>make build BINS=&amp;quot;envoy-gateway&amp;quot;&lt;/code> 来构建 Envoy Gateway 二进制文件。&lt;/li>
&lt;li>运行 &lt;code>make build BINS=&amp;quot;egctl&amp;quot;&lt;/code> 来构建 egctl 二进制文件。&lt;/li>
&lt;/ul>
&lt;p>**注意：**二进制文件在 &lt;code>bin/$OS/$ARCH&lt;/code> 目录中生成，例如，&lt;code>bin/linux/amd64/&lt;/code>。&lt;/p></description></item><item><title>贡献</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/contributing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/contributing/</guid><description>&lt;p>我们欢迎来自社区的贡献。请仔细查看&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/about">项目目标&lt;/a>和以下指南，以简化您的贡献流程。&lt;/p>
&lt;h2 id="communication">沟通&lt;a class="td-heading-self-link" href="#communication" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>在开始开发主要功能之前，请通过 GitHub 或 Slack 联系我们。
我们将确保没有其他人正在处理此问题，并要求您创建 GitHub Issue。&lt;/li>
&lt;li>“主要功能”定义为超过 100 个 LOC 的任意更改（不包括测试），
或更改任何面向用户的行为。我们将使用 GitHub Issue 来讨论该功能并达成一致。
这是为了防止浪费您和我们的时间。主要功能的 GitHub 审核流程也很重要，
以便&lt;a href="../codeowners">与提交权限的干系者&lt;/a>可以就设计达成一致。
如果适合编写设计文档，则该文档必须托管在 GitHub Issue 中，或者托管在公开可读的位置并链接到 Issue 中。&lt;/li>
&lt;li>小补丁和错误修复不需要事先沟通。&lt;/li>
&lt;/ul>
&lt;h2 id="inclusivity">包容性&lt;a class="td-heading-self-link" href="#inclusivity" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Envoy Gateway 社区的一个明确的目标是完全包容性。
因此，所有 PR 的所有代码、API 和文档都必须遵守以下准则：&lt;/p>
&lt;ul>
&lt;li>不允许使用以下单词和短语：
&lt;ul>
&lt;li>&lt;strong>Whitelist&lt;/strong>：使用 allowlist 代替。&lt;/li>
&lt;li>&lt;strong>Blacklist&lt;/strong>：使用 denylist 或 blocklist 代替。&lt;/li>
&lt;li>&lt;strong>Master&lt;/strong>：使用 primary 代替。&lt;/li>
&lt;li>&lt;strong>Slave&lt;/strong>：使用 secondary 或 replica 代替。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>文档应该以包容的风格编写。
&lt;a href="https://developers.google.com/style/inclusive-documentation">Google 开发人员文档&lt;/a>包含有关此主题的出色参考。&lt;/li>
&lt;li>上述政策并非最终政策，未来可能会随着行业最佳实践的发展而进行修改。
维护人员在代码审查期间可能会提供有关此主题的其他评论。&lt;/li>
&lt;/ul>
&lt;h2 id="submitting-a-pr">提交一个 PR&lt;a class="td-heading-self-link" href="#submitting-a-pr" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>Fork 该仓库。&lt;/li>
&lt;li>修改。&lt;/li>
&lt;li>对每次提交都进行 DCO 签署。这可以通过 &lt;code>git commit -s&lt;/code> 来完成。&lt;/li>
&lt;li>提交您的 PR。&lt;/li>
&lt;li>将为您自动运行测试。&lt;/li>
&lt;li>我们&lt;strong>不会&lt;/strong>合并任何未通过测试的 PR。&lt;/li>
&lt;li>PR 预计对添加的代码具有 100% 的测试覆盖率。这可以通过覆盖范围构建来验证。
如果您的 PR 由于某种原因无法被 100% 覆盖，请在创建时明确解释原因。&lt;/li>
&lt;li>任何更改面向用户行为的 PR &lt;strong>必须&lt;/strong>在仓库中的
&lt;a href="https://github.com/envoyproxy/gateway/tree/main/site">docs&lt;/a> 文件夹中具有关联的文档以及&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/releasing/">变更日志&lt;/a>。&lt;/li>
&lt;li>所有代码注释和文档均应具有正确的英语语法和标点符号。
如果您的英语不流利（或者是一个糟糕的写作者 ;-)），请告诉我们，我们会尽力为您寻求帮助，但不能保证。&lt;/li>
&lt;li>您的 PR 标题应该是描述性的，通常以包含子系统名称的类型开头，
如有必要，带有 &lt;code>()&lt;/code>，摘要后跟冒号。格式例子如下：
&lt;ul>
&lt;li>&amp;ldquo;docs: fix grammar error&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;feat(translator): add new feature&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;fix: fix xx bug&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;chore: change ci &amp;amp; build tools etc&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>当您的 PR 被合并时，您的 PR 提交消息将用作其提交消息。
如果您的 PR 在审核期间出现分歧，您应该更新此字段。&lt;/li>
&lt;li>您的 PR 描述应详细说明 PR 的用途。如果它修复了现有问题，则应以“Fixes #XXX”结尾。&lt;/li>
&lt;li>如果您的 PR 是共同创作的或基于其他贡献者的早期 PR，
请注明 &lt;code>Co-authored-by: name &amp;lt;name@example.com&amp;gt;&lt;/code>。
有关更多详细信息，请参阅 GitHub 的&lt;a href="https://docs.github.com/zh/pull-requests/committing-changes-to-your-project/creating-and-editing-commits/creating-a-commit-with-multiple-authors">多作者指南&lt;/a>。&lt;/li>
&lt;li>当所有测试都通过并且满足本文所述的所有其他条件时，将指派维护人员审查并合并 PR。&lt;/li>
&lt;li>一旦您提交了 PR，&lt;strong>请不要对其进行 Rebase&lt;/strong>。
如果后续提交是新提交和/或合并，则检查起来要容易得多。我们会压缩并合并，因此 PR 中的提交数量并不重要。&lt;/li>
&lt;li>我们预计，一旦 PR 被开启，它将被积极处理，直到它被合并或关闭。
我们保留关闭没有取得进展的 PR 的权利。这通常定义为 7 天内没有变化。
显然，由于缺乏活跃度而被关闭的 PR 可以稍后重新开启。
关闭过时的 PR 有助于我们掌控当前正在进行的所有工作。&lt;/li>
&lt;/ul>
&lt;h2 id="maintainer-pr-review-policy">维护者 PR 审查策略&lt;a class="td-heading-self-link" href="#maintainer-pr-review-policy" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>请参阅 &lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/codeowners/">CODEOWNERS.md&lt;/a> 了解当前的维护者列表。&lt;/li>
&lt;li>需要由代表与 PR 所有者不同的隶属关系的维护者来审查和批准 PR。&lt;/li>
&lt;li>当项目成熟时，预计 PR 涉及代码的“领域专家”应该对 PR 进行审查。
此人不需要提交权限，只需要领域知识。&lt;/li>
&lt;li>对于仅更新文档或评论，
或对测试和工具进行细微更改（其中细微更改由相关维护者决定）的 PR，可以免除上述规则。&lt;/li>
&lt;li>如果有关于谁应该审查 PR 的问题，请在 Slack 中讨论。&lt;/li>
&lt;li>欢迎任何人审查他们想要审查的任何 PR，无论他们是否是维护者。&lt;/li>
&lt;li>如果 PR 在审核期间发生重大变化，请确保更新 PR 标题、提交消息和描述。&lt;/li>
&lt;li>合并前请&lt;strong>清理标题和正文&lt;/strong>。默认情况下，GitHub 使用原始标题填充压缩合并标题，
并使用 PR 中的每个单独提交填充提交正文。进行合并的维护者应确保标题遵循上述准则，
并应使用 PR 的原始提交消息覆盖正文（如有必要，请将其清理），同时保留 PR 作者的最终 DCO 签名。&lt;/li>
&lt;/ul>
&lt;h2 id="decision-making">决策&lt;a class="td-heading-self-link" href="#decision-making" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>这是一个新的、复杂的项目，我们需要很快做出很多决定。
为此，我们确定了做出（可能有争议的）决定的流程：&lt;/p></description></item><item><title>v1.0.2</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/releases/v1.0.2/</link><pubDate>Wed, 12 Jun 2024 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/releases/v1.0.2/</guid><description>&lt;p>日期：2024 年 6 月 12 日&lt;/p>
&lt;h2 id="installation">安装&lt;a class="td-heading-self-link" href="#installation" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>更新 EnvoyProxy 至 1.29.5&lt;/li>
&lt;li>对基础客户端使用 Patch API&lt;/li>
&lt;li>对于基础客户端，使用 ServerSideApply 代替 CreateOrUpdate&lt;/li>
&lt;/ul>
&lt;h2 id="testing">测试&lt;a class="td-heading-self-link" href="#testing" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>修复了由于某个转换器测试证书过期导致的失败问题&lt;/li>
&lt;/ul>
&lt;h2 id="translator">转换器&lt;a class="td-heading-self-link" href="#translator" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>使用 &lt;proto>-&lt;port> 来命名服务和容器端口&lt;/li>
&lt;li>添加代理协议始终作为第一个 listenerFilter&lt;/li>
&lt;li>为 extAuth 中的标头匹配器设置 ignoreCase&lt;/li>
&lt;li>添加了后端 TLS SAN 验证&lt;/li>
&lt;li>修复 ReplaceFullPath 不适用于根路径 (/)&lt;/li>
&lt;/ul>
&lt;h2 id="providers">Providers&lt;a class="td-heading-self-link" href="#providers" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>修复了将重复的 xroutes 添加到 gatewayapi 资源的问题&lt;/li>
&lt;li>修复了字段类型的安全策略引用授予问题&lt;/li>
&lt;li>修复了具有不同类型但相同名称和命名空间的路线扩展过滤器无法正确缓存的问题&lt;/li>
&lt;li>通过删除 generationChanged 谓词修复了 secrets/configmap 更新以触发控制器调协的问题&lt;/li>
&lt;li>移除了 EnvoyProxy parametersRef 的命名空间限制&lt;/li>
&lt;/ul></description></item><item><title>v1.0.1</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/releases/v1.0.1/</link><pubDate>Tue, 09 Apr 2024 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/releases/v1.0.1/</guid><description>&lt;p>日期：2024 年 4 月 9 日&lt;/p>
&lt;h2 id="installation">安装&lt;a class="td-heading-self-link" href="#installation" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>将 EnvoyProxy 版本更新至 v1.29.3&lt;/li>
&lt;li>修复了 Certgen 以支持在升级期间创建 hmac 密钥&lt;/li>
&lt;/ul>
&lt;h2 id="translator">转换器&lt;a class="td-heading-self-link" href="#translator" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>修复了 ResourceVersionTable 中的 nil Secret 问题&lt;/li>
&lt;li>当启用 ClientTrafficPolicy 和 MergeGateway 时，将缺少的 HTTP 过滤器添加到 HTTP 过滤器链&lt;/li>
&lt;li>启用 URL 重写时允许 WebSocket&lt;/li>
&lt;li>设置 HTTP 健康检查器的 Host 标头&lt;/li>
&lt;li>修复了重定向 URL 中的双斜杠&lt;/li>
&lt;li>允许 ClientTrafficPolicy 附加到同一网关内的多个 HTTP（非 HTTPS）侦听器&lt;/li>
&lt;li>为 HTTP Ext Auth 服务的路径设置前缀&lt;/li>
&lt;li>设置路由匹配优先顺序为 Exact &amp;gt; RegularExpression &amp;gt; PathPrefix&lt;/li>
&lt;li>修复了被合并网关的 infraIR 重复端口转换&lt;/li>
&lt;li>将 SpawnUpstreamSpan 设置为 true&lt;/li>
&lt;li>允许限流与多个监听器一起使用&lt;/li>
&lt;/ul>
&lt;h2 id="infra-manager">Infra-manager&lt;a class="td-heading-self-link" href="#infra-manager" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>当 InfraIR 具有空侦听器时跳过创建基础设施资源&lt;/li>
&lt;/ul></description></item><item><title>v1.0.0</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/releases/v1.0.0/</link><pubDate>Wed, 13 Mar 2024 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/releases/v1.0.0/</guid><description>&lt;p>日期：2024 年 3 月 13 日&lt;/p>
&lt;h2 id="documentation">文档&lt;a class="td-heading-self-link" href="#documentation" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>新增了本地限流（Local Ratelimit）的用户指南&lt;/li>
&lt;li>新增了熔断（Circuit Breaker）的用户指南&lt;/li>
&lt;li>新增了故障注入（Fault Injection）的用户指南&lt;/li>
&lt;li>新增了 EnvoyProxy extraArgs 的用户指南&lt;/li>
&lt;li>新增了在 ClientTrafficPolicy 中超时的用户指南&lt;/li>
&lt;li>新增了基础路由的 JWT Claim 用户指南&lt;/li>
&lt;li>新增了 HTTP 超时的用户指南&lt;/li>
&lt;li>新增了在 BackendTrafficPolicy 中重试的用户指南&lt;/li>
&lt;li>新增了基础身份验证（Basic Auth）的用户指南&lt;/li>
&lt;li>新增了 OIDC 的用户指南&lt;/li>
&lt;li>新增了 ClientTrafficPolicy 的用户指南&lt;/li>
&lt;li>新增了 BackendTrafficPolicy 的用户指南&lt;/li>
&lt;li>新增了使用 HTTPS 的基础身份验证（Basic Auth）的用户指南&lt;/li>
&lt;li>新增外部鉴权（External Authorization）的用户指南&lt;/li>
&lt;li>新增了 Kubernetes 外部路由的用户指南&lt;/li>
&lt;li>新增了 BackendTLSPolicy 的用户指南&lt;/li>
&lt;li>新增了从外部客户端到网关的双向 TLS 的用户指南&lt;/li>
&lt;li>新增了使用自定义证书进行控制平面身份验证的用户指南&lt;/li>
&lt;li>新增了多 GatewayClass 和合并 Gateway 部署模式的用户指南&lt;/li>
&lt;li>为 CRD API 添加了 &lt;code>Type&lt;/code> 和 &lt;code>required&lt;/code> 的文档&lt;/li>
&lt;li>重构了用户指南文档的结构&lt;/li>
&lt;li>将设计文档移动到“参与”下并重构&lt;/li>
&lt;li>将 crd-ref-docs 更新至 0.0.10&lt;/li>
&lt;li>将 Envoy Proxy 镜像更新为 main 中的 envoy:distroless-dev&lt;/li>
&lt;/ul>
&lt;h2 id="installation">安装&lt;a class="td-heading-self-link" href="#installation" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>新增了对从私有仓库中提取 envoyGateway 镜像的支持&lt;/li>
&lt;li>新增了为 certgen Job 配置资源的支持&lt;/li>
&lt;li>新增了为 EnvoyGateway Pod 配置亲和力的支持&lt;/li>
&lt;/ul>
&lt;h2 id="api">API&lt;a class="td-heading-self-link" href="#api" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>在 ClientTrafficPolicy CRD 中添加了对下游 QUIC/HTTP3 的支持&lt;/li>
&lt;li>在 ClientTrafficPolicy CRD 中添加了对下游 MTLS 的支持&lt;/li>
&lt;li>在 ClientTrafficPolicy CRD 中添加了对 EnvoyHeaders 的启用支持&lt;/li>
&lt;li>在 ClientTrafficPolicy CRD 中添加了对 DisableMergeSlash 和 escapedSlashesAction 的支持&lt;/li>
&lt;li>在 ClientTrafficPolicy CRD 中添加了对 HTTP/1.1 中的 EnableTrailers 的支持&lt;/li>
&lt;li>在 ClientTrafficPolicy CRD 中添加了对 HTTP/1 上保留标头字母大小写的支持&lt;/li>
&lt;li>在 ClientTrafficPolicy CRD 中添加了对 HTTP/1.0 和 HTTP/0.9 启用的支持&lt;/li>
&lt;li>在 ClientTrafficPolicy CRD 中添加了对使用 XFF 进行客户端 IP 检测的支持&lt;/li>
&lt;li>在 ClientTrafficPolicy CRD 中添加了对使用自定义标头进行客户端 IP 检测的支持&lt;/li>
&lt;li>在 ClientTrafficPolicy CRD 中添加了对连接超时的支持&lt;/li>
&lt;li>在 ClientTrafficPolicy CRD 中添加了对常见 TLS 配置属性的支持&lt;/li>
&lt;li>在 ClientTrafficPolicy CRD 中添加了对代理协议的支持&lt;/li>
&lt;li>在 ClientTrafficPolicy CRD 中添加了对 TCPKeepAlive 的支持&lt;/li>
&lt;li>在 BackendTrafficPolicy CRD 中添加了对本地限流（Local Ratelimit）的支持&lt;/li>
&lt;li>在 BackendTrafficPolicy CRD 中添加了对熔断（Circuit Breaker）的支持&lt;/li>
&lt;li>在 BackendTrafficPolicy CRD 中添加了对故障注入（Fault Injection）的支持&lt;/li>
&lt;li>在 BackendTrafficPolicy CRD 中添加了对被动健康检查（Passive Health Check）的支持&lt;/li>
&lt;li>在 BackendTrafficPolicy CRD 中添加了对主动健康检查（Active Health Check）的支持&lt;/li>
&lt;li>在 BackendTrafficPolicy CRD 中添加了对连接超时（Connection Timeout）的支持&lt;/li>
&lt;li>在 BackendTrafficPolicy CRD 中添加了对压缩器/解压缩器（Compressor/Decompressor）的支持&lt;/li>
&lt;li>在 BackendTrafficPolicy CRD 中添加了对重试（Retry）的支持&lt;/li>
&lt;li>在 BackendTrafficPolicy CRD 中添加了对慢启动模式的支持&lt;/li>
&lt;li>在 BackendTrafficPolicy CRD 中添加了对代理协议的支持&lt;/li>
&lt;li>在 BackendTrafficPolicy CRD 中添加了对 TCPKeepAlive 的支持&lt;/li>
&lt;li>在 BackendTrafficPolicy CRD 中添加了对 PolicyStatus 的支持&lt;/li>
&lt;li>在 ClientTrafficPolicy CRD 中添加了对 PolicyStatus 的支持&lt;/li>
&lt;li>在 SecurityPolicy CRD 中添加了对 PolicyStatus 的支持&lt;/li>
&lt;li>在 SecurityPolicy CRD 中添加了对 OIDC 的支持&lt;/li>
&lt;li>在 SecurityPolicy CRD 中添加了对基础身份验证（Basic Auth）的支持&lt;/li>
&lt;li>在 SecurityPolicy CRD 中添加了对 OIDC 的 RedirectURL 和 signoutPath 的支持&lt;/li>
&lt;li>在 SecurityPolicy CRD 中添加了对 ExtractFrom 标头和参数到 JWT 的支持&lt;/li>
&lt;li>在 SecurityPolicy CRD 中添加了对外部鉴权（External Authorization）的支持&lt;/li>
&lt;li>在 SecurityPolicy CRD 中添加了对 JWT 的 RecomputeRoute 字段的支持&lt;/li>
&lt;li>在 SecurityPolicy CRD 中添加了对 CORS 设置的 AllowCredentials 旋钮的支持&lt;/li>
&lt;li>在 SecurityPolicy CRD 中添加了对从不同标识符提取到 JWT 的支持&lt;/li>
&lt;li>在 EnvoyPatchPolicy CRD 中添加了对 Secret 资源的支持&lt;/li>
&lt;li>在 EnvoyPatchPolicy CRD 中添加了对 JSONPatchOperation 的值可选的支持&lt;/li>
&lt;li>在 EnvoyPatchPolicy CRD 中添加了对 JSONPatchOperation 中 &lt;code>From&lt;/code> 字段的支持&lt;/li>
&lt;li>在 EnvoyPatchPolicy CRD 中添加了对 MergeGateways 的支持&lt;/li>
&lt;li>通过实施 BackendTLSPolicy CRD 添加了对上游 TLS 的支持&lt;/li>
&lt;li>在 EnvoyGateway 配置中添加了对 NamespaceSelectors 的 LabelSelector 类型的支持&lt;/li>
&lt;li>在 EnvoyGateway 配置中添加了对 Ratelimit Prometheus 的支持&lt;/li>
&lt;li>在 EnvoyProxy CRD 中添加了对 Pod 终止时 Envoy 关闭之前优雅地耗尽侦听器的支持&lt;/li>
&lt;li>在 EnvoyProxy CRD 中添加了对 Envoy 服务配置 externalTrafficPolicy 的支持&lt;/li>
&lt;li>在 EnvoyProxy CRD 中添加了对 Envoy 额外参数的支持&lt;/li>
&lt;li>在 EnvoyProxy CRD 中添加了对 Mergepatch 到 envoyproxy/ratelimit 部署的支持&lt;/li>
&lt;li>在 EnvoyProxy CRD 中添加了对 Mergepatch 到 envoyproxy 服务的支持&lt;/li>
&lt;li>在 EnvoyProxy CRD 中添加了对 NodeSelector 到 PodSpec 的支持&lt;/li>
&lt;li>在 EnvoyProxy CRD 中添加了对 HorizontalPodAutoscaler 的支持&lt;/li>
&lt;li>在 EnvoyProxy CRD 中添加了对 PodSpec 的 TopologySpreadConstraints 支持&lt;/li>
&lt;li>在 EnvoyProxy CRD 中添加了对 PodSpec 的 ImagePullSecrets 的支持&lt;/li>
&lt;/ul>
&lt;h3 id="breaking-changes">重大变化&lt;a class="td-heading-self-link" href="#breaking-changes" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>使用通配符将 AllowOrigins 与 SecurityPolicy CRD 中的 CORS 进行匹配&lt;/li>
&lt;li>删除 EnvoyProxy CRD 中的主机网络支持&lt;/li>
&lt;/ul>
&lt;h2 id="conformance">一致性&lt;a class="td-heading-self-link" href="#conformance" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>将后端镜像从 gcr.io/k8s-staging-ingressconformance/echoserver 替换为 gcr.io/k8s-staging-gateway-api/echo-basic&lt;/li>
&lt;/ul>
&lt;h2 id="testing">测试&lt;a class="td-heading-self-link" href="#testing" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>添加了标头中大小写保留的 e2e 测试&lt;/li>
&lt;li>添加了在 ClientTrafficPolicy 中超时的 e2e 测试&lt;/li>
&lt;li>添加了 JWT Claim 基础路由的 e2e 测试&lt;/li>
&lt;li>添加了 OIDC 的 e2e 测试&lt;/li>
&lt;li>添加了 BackendTrafficPolicy 重试（Retry）的 e2e 测试&lt;/li>
&lt;li>添加了后端升级的 e2e 测试&lt;/li>
&lt;li>添加了外部鉴权（External Authorization）的 e2e 测试&lt;/li>
&lt;li>添加了后端 TLS 策略的 e2e 测试&lt;/li>
&lt;li>添加了 Envoy Gateway 版本升级的 e2e 测试&lt;/li>
&lt;li>添加了加权后端的 e2e 测试&lt;/li>
&lt;li>添加了对 LoadBalancerIP 的验证以防止拖尾周期&lt;/li>
&lt;/ul>
&lt;h2 id="translator">转换器&lt;a class="td-heading-self-link" href="#translator" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>修复了前缀匹配，以防止具有相同前缀的路由匹配错误的问题&lt;/li>
&lt;li>通过为 ir.Infra 实现类似接口来修复多重调谐的问题&lt;/li>
&lt;li>修复了具有空条件 {} 的 EndpointSlice 问题&lt;/li>
&lt;li>修复了解析 http 请求超时时的错误处理&lt;/li>
&lt;li>修复了 EnvoyPatchPolicy 被禁用时无状态的问题&lt;/li>
&lt;li>修复了 xDS 和 infra IR 的可打印问题&lt;/li>
&lt;li>修复了跳过 backendRef 并将权重设置为 0 的问题&lt;/li>
&lt;li>修复了限流中的 AND 标头匹配不起作用的问题&lt;/li>
&lt;li>修复了不存在 GatewayClass 时的删除逻辑&lt;/li>
&lt;li>修复了 ClientTrafficPolicy 的 mergedGateway irKey 匹配问题&lt;/li>
&lt;li>修复了策略应仅被应用到 mergeGateway 为 true 的 Gateway 的问题&lt;/li>
&lt;li>修复了启用 mergeGateway 时不会显示网关侦听器状态的问题&lt;/li>
&lt;li>通过将 Web 套接字升级配置从 hcm 移动到路由，修复了 GRPCroute websocket 无法工作的问题&lt;/li>
&lt;li>修复了在 HTTPRoute 上设置超时时配置空闲超时的问题&lt;/li>
&lt;li>修复了 OIDC 令牌端点的放宽 HTTPS 限制&lt;/li>
&lt;li>修复了将路由转换到空的后端时出现的 Panic 问题&lt;/li>
&lt;li>修复了 xDS 转换应以最高效的方式完成&lt;/li>
&lt;li>修复了从监测中删除未被使用的状态键的问题&lt;/li>
&lt;li>修复了比较 Envoy Proxy 服务时忽略终结器的问题&lt;/li>
&lt;li>修复了如果 HTTP/3 被启用后不会覆盖 ALPN 数组的问题&lt;/li>
&lt;li>修复了启用 HTTP/3 时默认添加 h3 ALPN 的问题&lt;/li>
&lt;li>修复了 SecurityPolicy/BackendTrafficPolicy 的 Merge 行为，改为 Replace&lt;/li>
&lt;li>修复了启用 HTTP/3 时在 alt-svc 标头中使用服务端口的问题&lt;/li>
&lt;li>修复了防止针对同一端口上的非 TLS 侦听器的策略发生冲突&lt;/li>
&lt;li>修复了跳过所有策略的 ReasonTargetNotFound&lt;/li>
&lt;li>修复了跳过所有策略的空发布状态&lt;/li>
&lt;li>添加了在发送到 Envoy 之前正则表达式验证支持&lt;/li>
&lt;li>添加了当服务类型为 ClusterIP 时将 spec.addresses.value 设置为 ClusterIP 的支持&lt;/li>
&lt;li>为 BackendRef 中的过滤器添加了不支持的状态条件&lt;/li>
&lt;li>为 Provider 资源添加了 List 替代 Map，以保证稳定性&lt;/li>
&lt;li>添加了 OAuth Cookie 的后缀，以防止多个 OAuth 过滤器覆盖彼此的 Cookie&lt;/li>
&lt;li>添加了对 BackendTrafficPolicy 和 SecurityPolicy 覆盖条件的支持&lt;/li>
&lt;li>添加了对默认重试预计量和重试主机判断的支持&lt;/li>
&lt;li>添加了对 gateway.spec.infrastructural 实现的支持&lt;/li>
&lt;li>添加了对多个后端的上游 TLS 的支持&lt;/li>
&lt;li>添加了在 ClientTrafficPolicy 中对 CA 证书验证的支持&lt;/li>
&lt;/ul>
&lt;h2 id="providers">Provider&lt;a class="td-heading-self-link" href="#providers" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>添加了对每个控制器多个 GatewayClass 的支持&lt;/li>
&lt;li>在 Kubernetes Provider 中添加了 SecurityPolicyIndexers&lt;/li>
&lt;li>添加了对在 CertGen Job 中生成 HMAC 密钥的支持&lt;/li>
&lt;li>修复了删除 GatewayClass 时的 Finalizer 逻辑&lt;/li>
&lt;li>修复了重新启动控制平面时 MergeGateway 出现 Panic 的问题&lt;/li>
&lt;/ul>
&lt;h2 id="xds">xDS&lt;a class="td-heading-self-link" href="#xds" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>添加了对 EDS 缓存的支持&lt;/li>
&lt;li>添加了对 ADS 缓存的支持，以保证规则顺序&lt;/li>
&lt;li>修复了使用 RequestHeaderModifier 过滤器时出现的已弃用字段错误&lt;/li>
&lt;li>修复了 Envoy 在运行时拒绝 XDS 并在重新启动时丢失所有路由的问题&lt;/li>
&lt;li>修复了与定义的路由不匹配的请求触发每个路由过滤器的问题&lt;/li>
&lt;li>将 go-control-plane 升级至 v0.12.0&lt;/li>
&lt;/ul>
&lt;h2 id="cli">Cli&lt;a class="td-heading-self-link" href="#cli" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>添加了对 egctl x status 命令的支持&lt;/li>
&lt;li>添加了对 egctl experimental dashboard envoy-proxy 命令的支持&lt;/li>
&lt;li>添加了对 egctl config ratelimit 命令的支持&lt;/li>
&lt;li>添加了对从 gateway-api 资源到 IR 的 gctl translate from gateway-api 命令的支持&lt;/li>
&lt;/ul></description></item><item><title>API Reference</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/api/extension_types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/api/extension_types/</guid><description>&lt;h2 id="packages">Packages&lt;a class="td-heading-self-link" href="#packages" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/api/extension_types/#gatewayenvoyproxyiov1alpha1">gateway.envoyproxy.io/v1alpha1&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="gatewayenvoyproxyiov1alpha1">gateway.envoyproxy.io/v1alpha1&lt;a class="td-heading-self-link" href="#gatewayenvoyproxyiov1alpha1" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Package v1alpha1 contains API schema definitions for the gateway.envoyproxy.io
API group.&lt;/p>
&lt;h3 id="resource-types">Resource Types&lt;a class="td-heading-self-link" href="#resource-types" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/api/extension_types/#backend">Backend&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/api/extension_types/#backendtrafficpolicy">BackendTrafficPolicy&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/api/extension_types/#clienttrafficpolicy">ClientTrafficPolicy&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/api/extension_types/#envoyextensionpolicy">EnvoyExtensionPolicy&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/api/extension_types/#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/api/extension_types/#envoypatchpolicy">EnvoyPatchPolicy&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/api/extension_types/#envoyproxy">EnvoyProxy&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/api/extension_types/#httproutefilter">HTTPRouteFilter&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/api/extension_types/#securitypolicy">SecurityPolicy&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="alpnprotocol">ALPNProtocol&lt;a class="td-heading-self-link" href="#alpnprotocol" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;em>string&lt;/em>&lt;/p>
&lt;p>ALPNProtocol specifies the protocol to be negotiated using ALPN&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/api/extension_types/#backendtlsconfig">BackendTLSConfig&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/api/extension_types/#clienttlssettings">ClientTLSSettings&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/api/extension_types/#tlssettings">TLSSettings&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Value&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>http/1.0&lt;/code>&lt;/td>
 &lt;td>HTTPProtocolVersion1_0 specifies that HTTP/1.0 should be negotiable with ALPN&lt;br />&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>http/1.1&lt;/code>&lt;/td>
 &lt;td>HTTPProtocolVersion1_1 specifies that HTTP/1.1 should be negotiable with ALPN&lt;br />&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>h2&lt;/code>&lt;/td>
 &lt;td>HTTPProtocolVersion2 specifies that HTTP/2 should be negotiable with ALPN&lt;br />&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h4 id="alsenvoyproxyaccesslog">ALSEnvoyProxyAccessLog&lt;a class="td-heading-self-link" href="#alsenvoyproxyaccesslog" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;p>ALSEnvoyProxyAccessLog defines the gRPC Access Log Service (ALS) sink.
The service must implement the Envoy gRPC Access Log Service streaming API:
&lt;a href="https://www.envoyproxy.io/docs/envoy/latest/api-v3/service/accesslog/v3/als.proto">https://www.envoyproxy.io/docs/envoy/latest/api-v3/service/accesslog/v3/als.proto&lt;/a>
Access log format information is passed in the form of gRPC metadata when the
stream is established.&lt;/p></description></item><item><title>Gateway Addons Helm Chart</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/install/gateway-addons-helm-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/install/gateway-addons-helm-api/</guid><description>&lt;p>
&lt;img src="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/https://img.shields.io/badge/Version-v0.0.0--latest-informational?style=flat-square" alt="Version: v0.0.0-latest"> 
&lt;img src="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/https://img.shields.io/badge/Type-application-informational?style=flat-square" alt="Type: application"> 
&lt;img src="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/https://img.shields.io/badge/AppVersion-latest-informational?style=flat-square" alt="AppVersion: latest">&lt;/p>
&lt;p>An Add-ons Helm chart for Envoy Gateway&lt;/p>
&lt;p>&lt;strong>Homepage:&lt;/strong> &lt;a href="https://gateway.envoyproxy.io/">https://gateway.envoyproxy.io/&lt;/a>&lt;/p>
&lt;h2 id="maintainers">Maintainers&lt;a class="td-heading-self-link" href="#maintainers" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Name&lt;/th>
 &lt;th>Email&lt;/th>
 &lt;th>Url&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>envoy-gateway-steering-committee&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;a href="https://github.com/envoyproxy/gateway/blob/main/GOVERNANCE.md">https://github.com/envoyproxy/gateway/blob/main/GOVERNANCE.md&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>envoy-gateway-maintainers&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;a href="https://github.com/envoyproxy/gateway/blob/main/CODEOWNERS">https://github.com/envoyproxy/gateway/blob/main/CODEOWNERS&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="source-code">Source Code&lt;a class="td-heading-self-link" href="#source-code" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/envoyproxy/gateway">https://github.com/envoyproxy/gateway&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="requirements">Requirements&lt;a class="td-heading-self-link" href="#requirements" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Repository&lt;/th>
 &lt;th>Name&lt;/th>
 &lt;th>Version&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://fluent.github.io/helm-charts">https://fluent.github.io/helm-charts&lt;/a>&lt;/td>
 &lt;td>fluent-bit&lt;/td>
 &lt;td>0.30.4&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://grafana.github.io/helm-charts">https://grafana.github.io/helm-charts&lt;/a>&lt;/td>
 &lt;td>alloy&lt;/td>
 &lt;td>0.9.2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://grafana.github.io/helm-charts">https://grafana.github.io/helm-charts&lt;/a>&lt;/td>
 &lt;td>grafana&lt;/td>
 &lt;td>8.0.0&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://grafana.github.io/helm-charts">https://grafana.github.io/helm-charts&lt;/a>&lt;/td>
 &lt;td>loki&lt;/td>
 &lt;td>4.8.0&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://grafana.github.io/helm-charts">https://grafana.github.io/helm-charts&lt;/a>&lt;/td>
 &lt;td>tempo&lt;/td>
 &lt;td>1.3.1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://open-telemetry.github.io/opentelemetry-helm-charts">https://open-telemetry.github.io/opentelemetry-helm-charts&lt;/a>&lt;/td>
 &lt;td>opentelemetry-collector&lt;/td>
 &lt;td>0.108.0&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://prometheus-community.github.io/helm-charts">https://prometheus-community.github.io/helm-charts&lt;/a>&lt;/td>
 &lt;td>prometheus&lt;/td>
 &lt;td>25.21.0&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="values">Values&lt;a class="td-heading-self-link" href="#values" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Key&lt;/th>
 &lt;th>Type&lt;/th>
 &lt;th>Default&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>alloy.alloy.configMap.content&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;// Write your Alloy config here:\nlogging {\n level = \&amp;quot;info\&amp;quot;\n format = \&amp;quot;logfmt\&amp;quot;\n}\nloki.write \&amp;quot;alloy\&amp;quot; {\n endpoint {\n url = \&amp;quot;http://loki.monitoring.svc:3100/loki/api/v1/push\&amp;quot;\n }\n}\n// discovery.kubernetes allows you to find scrape targets from Kubernetes resources.\n// It watches cluster state and ensures targets are continually synced with what is currently running in your cluster.\ndiscovery.kubernetes \&amp;quot;pod\&amp;quot; {\n role = \&amp;quot;pod\&amp;quot;\n}\n\n// discovery.relabel rewrites the label set of the input targets by applying one or more relabeling rules.\n// If no rules are defined, then the input targets are exported as-is.\ndiscovery.relabel \&amp;quot;pod_logs\&amp;quot; {\n targets = discovery.kubernetes.pod.targets\n\n // Label creation - \&amp;quot;namespace\&amp;quot; field from \&amp;quot;__meta_kubernetes_namespace\&amp;quot;\n rule {\n source_labels = [\&amp;quot;__meta_kubernetes_namespace\&amp;quot;]\n action = \&amp;quot;replace\&amp;quot;\n target_label = \&amp;quot;namespace\&amp;quot;\n }\n\n // Label creation - \&amp;quot;pod\&amp;quot; field from \&amp;quot;__meta_kubernetes_pod_name\&amp;quot;\n rule {\n source_labels = [\&amp;quot;__meta_kubernetes_pod_name\&amp;quot;]\n action = \&amp;quot;replace\&amp;quot;\n target_label = \&amp;quot;pod\&amp;quot;\n }\n\n // Label creation - \&amp;quot;container\&amp;quot; field from \&amp;quot;__meta_kubernetes_pod_container_name\&amp;quot;\n rule {\n source_labels = [\&amp;quot;__meta_kubernetes_pod_container_name\&amp;quot;]\n action = \&amp;quot;replace\&amp;quot;\n target_label = \&amp;quot;container\&amp;quot;\n }\n\n // Label creation - \&amp;quot;app\&amp;quot; field from \&amp;quot;__meta_kubernetes_pod_label_app_kubernetes_io_name\&amp;quot;\n rule {\n source_labels = [\&amp;quot;__meta_kubernetes_pod_label_app_kubernetes_io_name\&amp;quot;]\n action = \&amp;quot;replace\&amp;quot;\n target_label = \&amp;quot;app\&amp;quot;\n }\n\n // Label creation - \&amp;quot;job\&amp;quot; field from \&amp;quot;__meta_kubernetes_namespace\&amp;quot; and \&amp;quot;__meta_kubernetes_pod_container_name\&amp;quot;\n // Concatenate values __meta_kubernetes_namespace/__meta_kubernetes_pod_container_name\n rule {\n source_labels = [\&amp;quot;__meta_kubernetes_namespace\&amp;quot;, \&amp;quot;__meta_kubernetes_pod_container_name\&amp;quot;]\n action = \&amp;quot;replace\&amp;quot;\n target_label = \&amp;quot;job\&amp;quot;\n separator = \&amp;quot;/\&amp;quot;\n replacement = \&amp;quot;$1\&amp;quot;\n }\n\n // Label creation - \&amp;quot;container\&amp;quot; field from \&amp;quot;__meta_kubernetes_pod_uid\&amp;quot; and \&amp;quot;__meta_kubernetes_pod_container_name\&amp;quot;\n // Concatenate values __meta_kubernetes_pod_uid/__meta_kubernetes_pod_container_name.log\n rule {\n source_labels = [\&amp;quot;__meta_kubernetes_pod_uid\&amp;quot;, \&amp;quot;__meta_kubernetes_pod_container_name\&amp;quot;]\n action = \&amp;quot;replace\&amp;quot;\n target_label = \&amp;quot;__path__\&amp;quot;\n separator = \&amp;quot;/\&amp;quot;\n replacement = \&amp;quot;/var/log/pods/*$1/*.log\&amp;quot;\n }\n\n // Label creation - \&amp;quot;container_runtime\&amp;quot; field from \&amp;quot;__meta_kubernetes_pod_container_id\&amp;quot;\n rule {\n source_labels = [\&amp;quot;__meta_kubernetes_pod_container_id\&amp;quot;]\n action = \&amp;quot;replace\&amp;quot;\n target_label = \&amp;quot;container_runtime\&amp;quot;\n regex = \&amp;quot;^(\\\\S+):\\\\/\\\\/.+$\&amp;quot;\n replacement = \&amp;quot;$1\&amp;quot;\n }\n}\n\n// loki.source.kubernetes tails logs from Kubernetes containers using the Kubernetes API.\nloki.source.kubernetes \&amp;quot;pod_logs\&amp;quot; {\n targets = discovery.relabel.pod_logs.output\n forward_to = [loki.process.pod_logs.receiver]\n}\n// loki.process receives log entries from other Loki components, applies one or more processing stages,\n// and forwards the results to the list of receivers in the component’s arguments.\nloki.process \&amp;quot;pod_logs\&amp;quot; {\n stage.static_labels {\n values = {\n cluster = \&amp;quot;envoy-gateway\&amp;quot;,\n }\n }\n\n forward_to = [loki.write.alloy.receiver]\n}&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>alloy.enabled&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>alloy.fullnameOverride&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;alloy&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>fluent-bit.config.filters&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;[FILTER]\n Name kubernetes\n Match kube.*\n Merge_Log On\n Keep_Log Off\n K8S-Logging.Parser On\n K8S-Logging.Exclude On\n\n[FILTER]\n Name grep\n Match kube.*\n Regex $kubernetes['container_name'] ^envoy$\n\n[FILTER]\n Name parser\n Match kube.*\n Key_Name log\n Parser envoy\n Reserve_Data True\n&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>fluent-bit.config.inputs&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;[INPUT]\n Name tail\n Path /var/log/containers/*.log\n multiline.parser docker, cri\n Tag kube.*\n Mem_Buf_Limit 5MB\n Skip_Long_Lines On\n&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>fluent-bit.config.outputs&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;[OUTPUT]\n Name loki\n Match kube.*\n Host loki.monitoring.svc.cluster.local\n Port 3100\n Labels job=fluentbit, app=$kubernetes['labels']['app'], k8s_namespace_name=$kubernetes['namespace_name'], k8s_pod_name=$kubernetes['pod_name'], k8s_container_name=$kubernetes['container_name']\n&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>fluent-bit.config.service&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;[SERVICE]\n Daemon Off\n Flush {{ .Values.flush }}\n Log_Level {{ .Values.logLevel }}\n Parsers_File parsers.conf\n Parsers_File custom_parsers.conf\n HTTP_Server On\n HTTP_Listen 0.0.0.0\n HTTP_Port {{ .Values.metricsPort }}\n Health_Check On\n&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>fluent-bit.enabled&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>true&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>fluent-bit.fullnameOverride&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;fluent-bit&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>fluent-bit.image.repository&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;fluent/fluent-bit&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>fluent-bit.podAnnotations.&amp;ldquo;fluentbit.io/exclude&amp;rdquo;&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;true&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>fluent-bit.podAnnotations.&amp;ldquo;prometheus.io/path&amp;rdquo;&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;/api/v1/metrics/prometheus&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>fluent-bit.podAnnotations.&amp;ldquo;prometheus.io/port&amp;rdquo;&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;2020&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>fluent-bit.podAnnotations.&amp;ldquo;prometheus.io/scrape&amp;rdquo;&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;true&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>fluent-bit.testFramework.enabled&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>grafana.adminPassword&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;admin&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>grafana.dashboardProviders.&amp;ldquo;dashboardproviders.yaml&amp;rdquo;.apiVersion&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>1&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>grafana.dashboardProviders.&amp;ldquo;dashboardproviders.yaml&amp;rdquo;.providers[0].disableDeletion&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>grafana.dashboardProviders.&amp;ldquo;dashboardproviders.yaml&amp;rdquo;.providers[0].editable&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>true&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>grafana.dashboardProviders.&amp;ldquo;dashboardproviders.yaml&amp;rdquo;.providers[0].folder&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;envoy-gateway&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>grafana.dashboardProviders.&amp;ldquo;dashboardproviders.yaml&amp;rdquo;.providers[0].name&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;envoy-gateway&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>grafana.dashboardProviders.&amp;ldquo;dashboardproviders.yaml&amp;rdquo;.providers[0].options.path&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;/var/lib/grafana/dashboards/envoy-gateway&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>grafana.dashboardProviders.&amp;ldquo;dashboardproviders.yaml&amp;rdquo;.providers[0].orgId&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>1&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>grafana.dashboardProviders.&amp;ldquo;dashboardproviders.yaml&amp;rdquo;.providers[0].type&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;file&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>grafana.dashboardsConfigMaps.envoy-gateway&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;grafana-dashboards&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>grafana.datasources.&amp;ldquo;datasources.yaml&amp;rdquo;.apiVersion&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>1&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>grafana.datasources.&amp;ldquo;datasources.yaml&amp;rdquo;.datasources[0].name&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;Prometheus&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>grafana.datasources.&amp;ldquo;datasources.yaml&amp;rdquo;.datasources[0].type&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;prometheus&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>grafana.datasources.&amp;ldquo;datasources.yaml&amp;rdquo;.datasources[0].url&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;http://prometheus&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>grafana.enabled&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>true&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>grafana.fullnameOverride&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;grafana&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>grafana.service.type&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;LoadBalancer&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>grafana.testFramework.enabled&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>loki.backend.replicas&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>0&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>loki.deploymentMode&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;SingleBinary&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>loki.enabled&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>true&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>loki.fullnameOverride&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;loki&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>loki.gateway.enabled&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>loki.loki.auth_enabled&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>loki.loki.commonConfig.replication_factor&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>1&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>loki.loki.compactorAddress&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;loki&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>loki.loki.memberlist&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;loki-memberlist&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>loki.loki.rulerConfig.storage.type&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;local&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>loki.loki.storage.type&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;filesystem&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>loki.monitoring.lokiCanary.enabled&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>loki.monitoring.selfMonitoring.enabled&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>loki.monitoring.selfMonitoring.grafanaAgent.installOperator&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>loki.read.replicas&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>0&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>loki.singleBinary.replicas&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>1&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>loki.test.enabled&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>loki.write.replicas&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>0&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.exporters.debug.verbosity&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;detailed&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.exporters.loki.endpoint&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;http://loki.monitoring.svc:3100/loki/api/v1/push&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.exporters.otlp.endpoint&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;tempo.monitoring.svc:4317&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.exporters.otlp.tls.insecure&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>true&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.exporters.prometheus.endpoint&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;[${env:MY_POD_IP}]:19001&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.extensions.health_check.endpoint&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;[${env:MY_POD_IP}]:13133&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.processors.attributes.actions[0].action&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;insert&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.processors.attributes.actions[0].key&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;loki.attribute.labels&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.processors.attributes.actions[0].value&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;k8s.pod.name, k8s.namespace.name&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.receivers.datadog.endpoint&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;[${env:MY_POD_IP}]:8126&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.receivers.jaeger.protocols.grpc.endpoint&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;[${env:MY_POD_IP}]:14250&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.receivers.jaeger.protocols.thrift_compact.endpoint&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;[${env:MY_POD_IP}]:6831&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.receivers.jaeger.protocols.thrift_http.endpoint&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;[${env:MY_POD_IP}]:14268&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.receivers.otlp.protocols.grpc.endpoint&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;[${env:MY_POD_IP}]:4317&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.receivers.otlp.protocols.http.endpoint&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;[${env:MY_POD_IP}]:4318&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.receivers.prometheus.config.scrape_configs[0].job_name&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;opentelemetry-collector&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.receivers.prometheus.config.scrape_configs[0].scrape_interval&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;10s&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.receivers.prometheus.config.scrape_configs[0].static_configs[0].targets[0]&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;[${env:MY_POD_IP}]:8888&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.receivers.zipkin.endpoint&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;[${env:MY_POD_IP}]:9411&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.service.extensions[0]&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;health_check&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.service.pipelines.logs.exporters[0]&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;loki&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.service.pipelines.logs.processors[0]&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;attributes&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.service.pipelines.logs.receivers[0]&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;otlp&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.service.pipelines.metrics.exporters[0]&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;prometheus&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.service.pipelines.metrics.receivers[0]&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;datadog&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.service.pipelines.metrics.receivers[1]&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;otlp&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.service.pipelines.traces.exporters[0]&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;otlp&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.service.pipelines.traces.receivers[0]&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;datadog&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.service.pipelines.traces.receivers[1]&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;otlp&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.service.pipelines.traces.receivers[2]&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;zipkin&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.config.service.telemetry.metrics.address&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;[${env:MY_POD_IP}]:8888&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.enabled&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.fullnameOverride&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;otel-collector&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.image.repository&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;otel/opentelemetry-collector-contrib&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>opentelemetry-collector.mode&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;deployment&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>prometheus.alertmanager.enabled&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>prometheus.enabled&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>true&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>prometheus.kube-state-metrics.enabled&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>prometheus.prometheus-node-exporter.enabled&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>prometheus.prometheus-pushgateway.enabled&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>prometheus.server.fullnameOverride&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;prometheus&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>prometheus.server.global.scrape_interval&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;15s&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>prometheus.server.image.repository&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;prom/prometheus&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>prometheus.server.persistentVolume.enabled&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>prometheus.server.readinessProbeInitialDelay&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>0&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>prometheus.server.securityContext&lt;/td>
 &lt;td>object&lt;/td>
 &lt;td>&lt;code>{}&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>prometheus.server.service.type&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;LoadBalancer&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tempo.enabled&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>true&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tempo.fullnameOverride&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;tempo&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tempo.service.type&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;LoadBalancer&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Gateway Helm Chart</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/install/gateway-helm-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/install/gateway-helm-api/</guid><description>&lt;p>
&lt;img src="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/https://img.shields.io/badge/Version-v0.0.0--latest-informational?style=flat-square" alt="Version: v0.0.0-latest"> 
&lt;img src="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/https://img.shields.io/badge/Type-application-informational?style=flat-square" alt="Type: application"> 
&lt;img src="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/https://img.shields.io/badge/AppVersion-latest-informational?style=flat-square" alt="AppVersion: latest">&lt;/p>
&lt;p>The Helm chart for Envoy Gateway&lt;/p>
&lt;p>&lt;strong>Homepage:&lt;/strong> &lt;a href="https://gateway.envoyproxy.io/">https://gateway.envoyproxy.io/&lt;/a>&lt;/p>
&lt;h2 id="maintainers">Maintainers&lt;a class="td-heading-self-link" href="#maintainers" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Name&lt;/th>
 &lt;th>Email&lt;/th>
 &lt;th>Url&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>envoy-gateway-steering-committee&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;a href="https://github.com/envoyproxy/gateway/blob/main/GOVERNANCE.md">https://github.com/envoyproxy/gateway/blob/main/GOVERNANCE.md&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>envoy-gateway-maintainers&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;a href="https://github.com/envoyproxy/gateway/blob/main/CODEOWNERS">https://github.com/envoyproxy/gateway/blob/main/CODEOWNERS&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="source-code">Source Code&lt;a class="td-heading-self-link" href="#source-code" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/envoyproxy/gateway">https://github.com/envoyproxy/gateway&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="values">Values&lt;a class="td-heading-self-link" href="#values" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Key&lt;/th>
 &lt;th>Type&lt;/th>
 &lt;th>Default&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>certgen&lt;/td>
 &lt;td>object&lt;/td>
 &lt;td>&lt;code>{&amp;quot;job&amp;quot;:{&amp;quot;affinity&amp;quot;:{},&amp;quot;annotations&amp;quot;:{},&amp;quot;nodeSelector&amp;quot;:{},&amp;quot;resources&amp;quot;:{},&amp;quot;securityContext&amp;quot;:{&amp;quot;allowPrivilegeEscalation&amp;quot;:false,&amp;quot;capabilities&amp;quot;:{&amp;quot;drop&amp;quot;:[&amp;quot;ALL&amp;quot;]},&amp;quot;privileged&amp;quot;:false,&amp;quot;readOnlyRootFilesystem&amp;quot;:true,&amp;quot;runAsGroup&amp;quot;:65534,&amp;quot;runAsNonRoot&amp;quot;:true,&amp;quot;runAsUser&amp;quot;:65534,&amp;quot;seccompProfile&amp;quot;:{&amp;quot;type&amp;quot;:&amp;quot;RuntimeDefault&amp;quot;}},&amp;quot;tolerations&amp;quot;:[],&amp;quot;ttlSecondsAfterFinished&amp;quot;:30},&amp;quot;rbac&amp;quot;:{&amp;quot;annotations&amp;quot;:{},&amp;quot;labels&amp;quot;:{}}}&lt;/code>&lt;/td>
 &lt;td>Certgen is used to generate the certificates required by EnvoyGateway. If you want to construct a custom certificate, you can generate a custom certificate through Cert-Manager before installing EnvoyGateway. Certgen will not overwrite the custom certificate. Please do not manually modify &lt;code>values.yaml&lt;/code> to disable certgen, it may cause EnvoyGateway OIDC,OAuth2,etc. to not work as expected.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>config.envoyGateway.gateway.controllerName&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;gateway.envoyproxy.io/gatewayclass-controller&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>config.envoyGateway.logging.level.default&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;info&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>config.envoyGateway.provider.type&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;Kubernetes&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>createNamespace&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.envoyGateway.image.repository&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.envoyGateway.image.tag&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.envoyGateway.imagePullPolicy&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.envoyGateway.imagePullSecrets&lt;/td>
 &lt;td>list&lt;/td>
 &lt;td>&lt;code>[]&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.envoyGateway.resources.limits.memory&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;1024Mi&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.envoyGateway.resources.requests.cpu&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;100m&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.envoyGateway.resources.requests.memory&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;256Mi&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.envoyGateway.securityContext.allowPrivilegeEscalation&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.envoyGateway.securityContext.capabilities.drop[0]&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;ALL&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.envoyGateway.securityContext.privileged&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.envoyGateway.securityContext.runAsGroup&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>65532&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.envoyGateway.securityContext.runAsNonRoot&lt;/td>
 &lt;td>bool&lt;/td>
 &lt;td>&lt;code>true&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.envoyGateway.securityContext.runAsUser&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>65532&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.envoyGateway.securityContext.seccompProfile.type&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;RuntimeDefault&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.pod.affinity&lt;/td>
 &lt;td>object&lt;/td>
 &lt;td>&lt;code>{}&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.pod.annotations.&amp;ldquo;prometheus.io/port&amp;rdquo;&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;19001&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.pod.annotations.&amp;ldquo;prometheus.io/scrape&amp;rdquo;&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;true&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.pod.labels&lt;/td>
 &lt;td>object&lt;/td>
 &lt;td>&lt;code>{}&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.pod.nodeSelector&lt;/td>
 &lt;td>object&lt;/td>
 &lt;td>&lt;code>{}&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.pod.tolerations&lt;/td>
 &lt;td>list&lt;/td>
 &lt;td>&lt;code>[]&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.pod.topologySpreadConstraints&lt;/td>
 &lt;td>list&lt;/td>
 &lt;td>&lt;code>[]&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.ports[0].name&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;grpc&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.ports[0].port&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>18000&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.ports[0].targetPort&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>18000&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.ports[1].name&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;ratelimit&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.ports[1].port&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>18001&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.ports[1].targetPort&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>18001&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.ports[2].name&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;wasm&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.ports[2].port&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>18002&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.ports[2].targetPort&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>18002&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.ports[3].name&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;metrics&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.ports[3].port&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>19001&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.ports[3].targetPort&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>19001&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.priorityClassName&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>nil&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>deployment.replicas&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>1&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>global.images.envoyGateway.image&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>nil&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>global.images.envoyGateway.pullPolicy&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>nil&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>global.images.envoyGateway.pullSecrets&lt;/td>
 &lt;td>list&lt;/td>
 &lt;td>&lt;code>[]&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>global.images.ratelimit.image&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;docker.io/envoyproxy/ratelimit:master&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>global.images.ratelimit.pullPolicy&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;IfNotPresent&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>global.images.ratelimit.pullSecrets&lt;/td>
 &lt;td>list&lt;/td>
 &lt;td>&lt;code>[]&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>kubernetesClusterDomain&lt;/td>
 &lt;td>string&lt;/td>
 &lt;td>&lt;code>&amp;quot;cluster.local&amp;quot;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>podDisruptionBudget.minAvailable&lt;/td>
 &lt;td>int&lt;/td>
 &lt;td>&lt;code>0&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>service.annotations&lt;/td>
 &lt;td>object&lt;/td>
 &lt;td>&lt;code>{}&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>GRPC 路由</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/tasks/traffic/grpc-routing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/tasks/traffic/grpc-routing/</guid><description>&lt;p>&lt;a href="https://gateway-api.sigs.k8s.io/api-types/grpcroute/">GRPCRoute&lt;/a> 资源允许用户通过匹配 HTTP/2 流量并将其转发到后端 gRPC 服务器来配置 gRPC 路由。
要了解有关 gRPC 路由的更多信息，请参阅&lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API 文档&lt;/a>。&lt;/p>
&lt;h2 id="prerequisites">先决条件&lt;a class="td-heading-self-link" href="#prerequisites" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>按照&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/tasks/quickstart/">快速入门&lt;/a>中的步骤安装 Envoy Gateway 和示例清单。
在继续之前，您应该能够使用 HTTP 查询示例程序后端。&lt;/p>
&lt;h2 id="installation">安装&lt;a class="td-heading-self-link" href="#installation" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>安装 gRPC 路由示例资源：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl apply -f https://raw.githubusercontent.com/envoyproxy/gateway/latest/examples/kubernetes/grpc-routing.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>该清单安装 &lt;a href="https://gateway-api.sigs.k8s.io/api-types/gatewayclass/">GatewayClass&lt;/a>、&lt;a href="https://gateway-api.sigs.k8s.io/api-types/gateway/">Gateway&lt;/a>、Deployment、Service 和 GRPCRoute 资源。
GatewayClass 是集群范围的资源，表示可以被实例化的一类 Gateway。&lt;/p>
&lt;p>**注意：**Envoy Gateway 默认被配置为使用 &lt;code>controllerName: gateway.envoyproxy.io/gatewayclass-controller&lt;/code> 管理 GatewayClass。&lt;/p>
&lt;h2 id="verification">验证&lt;a class="td-heading-self-link" href="#verification" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>检查 GatewayClass 的状态：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl get gc --selector&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">example&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>grpc-routing
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>状态应反映为 &lt;code>Accepted=True&lt;/code>，表示 Envoy Gateway 正在管理 GatewayClass。&lt;/p>
&lt;p>Gateway 代表基础设施的配置。创建 Gateway 时，&lt;a href="https://www.envoyproxy.io/">Envoy 代理&lt;/a>基础设施由 Envoy Gateway 预配或配置。
&lt;code>gatewayClassName&lt;/code> 定义此 Gateway 使用的 GatewayClass 的名称。检查 Gateway 状态：&lt;/p></description></item><item><title>JWT 身份验证</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/tasks/security/jwt-authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/tasks/security/jwt-authentication/</guid><description>&lt;p>此任务提供有关配置 &lt;a href="https://tools.ietf.org/html/rfc7519">JSON Web Token（JWT）&lt;/a>身份验证的说明。
JWT 身份验证在将请求路由到后端服务之前检查传入请求是否具有有效的 JWT。
目前，Envoy Gateway 仅支持通过 HTTP 标头验证 JWT，例如 &lt;code>Authorization: Bearer &amp;lt;token&amp;gt;&lt;/code>。&lt;/p>
&lt;p>Envoy Gateway 引入了一个名为 &lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/design/security-policy/">SecurityPolicy&lt;/a> 的新 CRD，允许用户配置 JWT 身份验证。
该实例化资源可以链接到 &lt;a href="https://gateway-api.sigs.k8s.io/api-types/gateway">Gateway&lt;/a>、&lt;a href="https://gateway-api.sigs.k8s.io/api-types/httproute">HTTPRoute&lt;/a> 或 &lt;a href="https://gateway-api.sigs.k8s.io/api-types/grpcroute">GRPCRoute&lt;/a> 资源。&lt;/p>
&lt;h2 id="prerequisites">先决条件&lt;a class="td-heading-self-link" href="#prerequisites" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>按照&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/tasks/quickstart/">快速入门&lt;/a>中的步骤安装 Envoy Gateway 和示例清单。
对于 GRPC - 请按照 &lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/latest/tasks/traffic/grpc-routing/">GRPC 路由&lt;/a>示例中的步骤操作。
在继续之前，您应该能够使用 HTTP 或 GRPC 查询示例程序后端。&lt;/p>
&lt;h2 id="configuration">配置&lt;a class="td-heading-self-link" href="#configuration" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>通过创建 &lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/design/security-policy/">SecurityPolicy&lt;/a> 并将其附加到示例 HTTPRoute 或 GRPCRoute，允许使用具有有效 JWT 的请求。&lt;/p>
&lt;h3 id="httproute">HTTPRoute&lt;a class="td-heading-self-link" href="#httproute" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl apply -f https://raw.githubusercontent.com/envoyproxy/gateway/latest/examples/kubernetes/jwt/jwt.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>已创建两个 HTTPRoute，一个用于 &lt;code>/foo&lt;/code>，另一个用于 &lt;code>/bar&lt;/code>。
已创建 SecurityPolicy 并以 HTTPRoute foo 为目标来验证对 &lt;code>/foo&lt;/code> 的请求。
HTTPRoute bar 不是 SecurityPolicy 的目标，并且将允许未经身份验证的请求发送到 &lt;code>/bar&lt;/code>。&lt;/p></description></item><item><title>SecurityPolicy</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/design/security-policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/design/security-policy/</guid><description>&lt;h2 id="overview">概述&lt;a class="td-heading-self-link" href="#overview" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>本设计文档引入了 &lt;code>SecurityPolicy&lt;/code> API，允许系统管理员为进入网关的流量配置身份验证和鉴权策略。&lt;/p>
&lt;h2 id="goals">目标&lt;a class="td-heading-self-link" href="#goals" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>添加 API 定义以保存用于配置进入网关的流量的身份验证和鉴权规则的设置。&lt;/li>
&lt;/ul>
&lt;h2 id="non-goals">非目标&lt;a class="td-heading-self-link" href="#non-goals" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>定义该 API 中的 API 配置字段。&lt;/li>
&lt;/ul>
&lt;h2 id="implementation">实现&lt;a class="td-heading-self-link" href="#implementation" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;code>SecurityPolicy&lt;/code> 是一个&lt;a href="https://gateway-api.sigs.k8s.io/references/policy-attachment">策略附件&lt;/a>类型的 API，可用于扩展 &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a> 来定义身份验证和鉴权规则。&lt;/p>
&lt;h3 id="example">示例&lt;a class="td-heading-self-link" href="#example" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>以下示例重点介绍了用户如何配置此 API。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">GatewayClass&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">eg&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">controllerName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io/gatewayclass-controller&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">eg&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">namespace&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">default&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">gatewayClassName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">eg&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">listeners&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">https&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">protocol&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">HTTPS&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">443&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">HTTPRoute&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">backend&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">namespace&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">default&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">parentRefs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">eg&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hostnames&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;www.example.com&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">rules&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">backendRefs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Service&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">backend&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3000&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">weight&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">matches&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">PathPrefix&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">value&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">SecurityPolicy&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">jwt-authn-policy&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">namespace&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">default&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">jwt&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">providers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">remoteJWKS&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">uri&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">https://raw.githubusercontent.com/envoyproxy/gateway/main/examples/kubernetes/jwt/jwks.json&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">targetRef&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">eg&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">namespace&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">default&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="features-api-fields">功能及 API 字段&lt;a class="td-heading-self-link" href="#features-api-fields" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>以下是此 API 中包含的功能列表：&lt;/p></description></item><item><title>参与 Envoy Gateway 文档工作</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/docs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/docs/</guid><description>&lt;p>Envoy Gateway 的文档位于 &lt;code>site/content/en&lt;/code> 目录中（中文内容位于 &lt;code>site/content/zh&lt;/code> 目录中）。
任何单独的文档都可以使用 &lt;a href="https://daringfireball.net/projects/markdown/syntax">Markdown&lt;/a> 编写。&lt;/p>
&lt;h2 id="documentation-structure">文档结构&lt;a class="td-heading-self-link" href="#documentation-structure" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>我们现在支持版本化的文档，文档下的目录名代表了文档的版本。
最新站点的根目录位于 &lt;code>site/content/en/latest&lt;/code> 中。
如果您想了解这些内容如何组合在一起，可以由此处开始。&lt;/p>
&lt;p>请注意，新内容应被添加到 &lt;code>site/content/en/latest&lt;/code> 中，
并将在下一个版本中被截断。&lt;code>site/content/en/v0.5.0&lt;/code> 下的内容是自动生成的，
通常不需要对其进行更改，除非您发现当前发布页面有一些不正确的内容。
如果是这样，您应该提交 PR 来一并更新 &lt;code>site/content/en/latest&lt;/code> 和 &lt;code>site/content/en/v0.5.0&lt;/code> 的内容。&lt;/p>
&lt;p>您可以默认访问代表当前版本的网站内容，
也可以在&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest">此处&lt;/a>或页面的页脚处访问包含最新版本变更的网站。&lt;/p>
&lt;h2 id="documentation-workflow">文档工作流程&lt;a class="td-heading-self-link" href="#documentation-workflow" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>要参与文档工作，只需编辑 &lt;code>site/content/en/latest&lt;/code> 中的 Markdown 文件，然后运行：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>make docs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这将使用被构建的 HTML 页面创建 &lt;code>site/public&lt;/code>。您可以通过运行以下命令来预览它：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>make docs-serve
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果您想生成文档的新发布版本，例如 &lt;code>v0.6.0&lt;/code>，请运行：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>make docs-release &lt;span style="color:#000">TAG&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>v0.6.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>该操作将更新项目根目录下的 VERSION 文件，该文件记录当前发布的版本，
并将在页面版本上下文和二进制版本输出中被使用。此外，这将生成新的目录 &lt;code>site/content/en/v0.6.0&lt;/code>，
其中包含 v0.6.0 的文档，如 &lt;code>/api&lt;/code>、&lt;code>/install&lt;/code> 等。&lt;/p>
&lt;h2 id="publishing-docs">发布文档&lt;a class="td-heading-self-link" href="#publishing-docs" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>每当文档被推送到 &lt;code>main&lt;/code> 分支时，CI 都会将构建的文档发布到 GitHub Pages。
有关更多详细信息，请参阅 &lt;code>.github/workflows/docs.yaml&lt;/code>。&lt;/p></description></item><item><title>发布流程</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/releasing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/releasing/</guid><description>&lt;p>本文档指导维护人员完成创建 Envoy Gateway 版本的过程。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/releasing/#release-candidate">候选版本&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/releasing/#prerequisites">先决条件&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/releasing/#setup-cherry-picker-action">设置 Cherry Picker Action&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/releasing/#minor-release">次要版本&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/releasing/#prerequisites-1">先决条件&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/releasing/#announce-the-release">公告发布&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="release-candidate">候选版本&lt;a class="td-heading-self-link" href="#release-candidate" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>应使用以下步骤创建候选版本。&lt;/p>
&lt;h3 id="prerequisites">先决条件&lt;a class="td-heading-self-link" href="#prerequisites" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>具备推送到 Envoy Gateway 仓库的权限。&lt;/li>
&lt;/ul>
&lt;p>设置环境变量以供后续步骤使用：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">MAJOR_VERSION&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">MINOR_VERSION&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">RELEASE_CANDIDATE_NUMBER&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">GITHUB_REMOTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>origin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>
&lt;p>克隆仓库，迁出 &lt;code>main&lt;/code> 分支，确保它是最新的，并且您的本地分支是干净的。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>创建一个主题分支，用于添加发布说明并使用发布版本更新 &lt;a href="https://github.com/envoyproxy/gateway/blob/main/VERSION">VERSION&lt;/a> 文件。
请参阅之前的&lt;a href="https://github.com/envoyproxy/gateway/tree/main/release-notes">发布说明&lt;/a>和 &lt;a href="https://github.com/envoyproxy/gateway/blob/main/VERSION">VERSION&lt;/a> 了解更多详细信息。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>签名、提交更改并将其推送到您 Fork 的分支。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>提交 &lt;a href="https://github.com/envoyproxy/gateway/pulls">Pull Request&lt;/a> 将更改合并到 &lt;code>main&lt;/code> 分支中。
在您的 PR 合并并且&lt;a href="https://github.com/envoyproxy/gateway/blob/main/.github/workflows/build_and_test.yaml">构建和测试&lt;/a>成功完成之前，请勿继续。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>从 &lt;code>main&lt;/code> 创建一个新的发布分支。发布分支应命名为
&lt;code>release/v${MAJOR_VERSION}.${MINOR_VERSION}&lt;/code>，例如 &lt;code>release/v0.3&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git checkout -b release/v&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">MAJOR_VERSION&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>.&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">MINOR_VERSION&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>将分支推送到 Envoy Gateway 仓库。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git push &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">GITHUB_REMOTE&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> release/v&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">MAJOR_VERSION&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>.&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">MINOR_VERSION&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>创建主题分支，用于将 Envoy Proxy 镜像和 Envoy Ratelimit 镜像更新为版本支持的 Tag。
有关更新镜像 Tag 的更多详细信息，请参阅 &lt;a href="https://github.com/envoyproxy/gateway/pull/2098">PR #2098&lt;/a>。&lt;/p></description></item><item><title>关于 Envoy Gateway</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/about/</guid><description>&lt;link rel="preload" as="image" href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/about/featured-background_hu11577074925921995840.jpg" media="(max-width: 1200px)">
&lt;link rel="preload" as="image" href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/about/featured-background_hu14348371288254188965.jpg" media="(min-width: 1200px)">
&lt;style>
#td-cover-block-0 {
 background-image: url(/eg-pr-preview/5-test-docs-preview/zh/about/featured-background_hu11577074925921995840.jpg);
}
@media only screen and (min-width: 1200px) {
 #td-cover-block-0 {
 background-image: url(/eg-pr-preview/5-test-docs-preview/zh/about/featured-background_hu14348371288254188965.jpg);
 }
}
&lt;/style>
&lt;section id="td-cover-block-0" class="row td-cover-block td-cover-block--height-auto js-td-cover td-overlay td-overlay--dark -bg-dark">
 &lt;div class="col-12">
 &lt;div class="container td-overlay__inner">
 &lt;div class="text-center">
 &lt;h1 class="display-1 mt-0 mt-md-5 pb-4">关于 Envoy Gateway&lt;/h1>
 
 &lt;div class="pt-3 lead">
 
 &lt;p>Envoy Gateway 是一个开源项目，用于将 Envoy Proxy 作为独立或基于 Kubernetes 的 API 网关进行管理。&lt;/p>
&lt;p>Gateway API 资源用于动态配置和管理 Envoy 代理。&lt;/p>
&lt;p>请继续阅读以了解更多信息，或访问我们的&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/">文档&lt;/a>并开始使用！&lt;/p>

 
 &lt;/div>
 &lt;/div>
 &lt;/div>
 &lt;/div>
 
&lt;/section>

&lt;div>&lt;a id="td-block-1" class="td-offset-anchor">&lt;/a>&lt;/div>
&lt;section class="row td-box td-box--black td-box--height-auto">
&lt;div class="col">
&lt;div class="container">
&lt;h2 id="objectives">目标&lt;a class="td-heading-self-link" href="#objectives" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;hr>
&lt;p>Envoy Gateway 的目标是通过支持多种 Ingress 和 L7/L4 流量路由用例的 API 来降低 Envoy 的使用障碍，这种富有表现力、可扩展、面向角色的 API 可以吸引更多用户使用 Envoy。
从而吸引更多用户使用 Envoy，并为供应商构建增值产品提供共同基础，而无需对基本交互进行重新设计。&lt;/p></description></item><item><title>兼容性表格</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/install/matrix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/latest/install/matrix/</guid><description>&lt;p>Envoy Gateway 依赖于 Envoy Proxy 和 Gateway API，并在 Kubernetes 集群中运行。
这些产品的所有版本并非都可以与 Envoy Gateway 一起运行。下面列出了支持的版本组合；
&lt;strong>粗体&lt;/strong>类型表示实际编译到每个 Envoy Gateway 版本中的 Envoy Proxy 和 Gateway API 的版本。&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Envoy Gateway 版本&lt;/th>
 &lt;th>Envoy Proxy 版本&lt;/th>
 &lt;th>Rate Limit 版本&lt;/th>
 &lt;th>Gateway API 版本&lt;/th>
 &lt;th>Kubernetes 版本&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>v1.0.0&lt;/td>
 &lt;td>&lt;strong>distroless-v1.29.2&lt;/strong>&lt;/td>
 &lt;td>&lt;strong>19f2079f&lt;/strong>&lt;/td>
 &lt;td>&lt;strong>v1.0.0&lt;/strong>&lt;/td>
 &lt;td>v1.26, v1.27, v1.28, v1.29&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>v0.6.0&lt;/td>
 &lt;td>&lt;strong>distroless-v1.28-latest&lt;/strong>&lt;/td>
 &lt;td>&lt;strong>b9796237&lt;/strong>&lt;/td>
 &lt;td>&lt;strong>v1.0.0&lt;/strong>&lt;/td>
 &lt;td>v1.26, v1.27, v1.28&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>v0.5.0&lt;/td>
 &lt;td>&lt;strong>v1.27-latest&lt;/strong>&lt;/td>
 &lt;td>&lt;strong>e059638d&lt;/strong>&lt;/td>
 &lt;td>&lt;strong>v0.7.1&lt;/strong>&lt;/td>
 &lt;td>v1.25, v1.26, v1.27&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>v0.4.0&lt;/td>
 &lt;td>&lt;strong>v1.26-latest&lt;/strong>&lt;/td>
 &lt;td>&lt;strong>542a6047&lt;/strong>&lt;/td>
 &lt;td>&lt;strong>v0.6.2&lt;/strong>&lt;/td>
 &lt;td>v1.25, v1.26, v1.27&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>v0.3.0&lt;/td>
 &lt;td>&lt;strong>v1.25-latest&lt;/strong>&lt;/td>
 &lt;td>&lt;strong>f28024e3&lt;/strong>&lt;/td>
 &lt;td>&lt;strong>v0.6.1&lt;/strong>&lt;/td>
 &lt;td>v1.24, v1.25, v1.26&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>v0.2.0&lt;/td>
 &lt;td>&lt;strong>v1.23-latest&lt;/strong>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;strong>v0.5.1&lt;/strong>&lt;/td>
 &lt;td>v1.24&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>latest&lt;/td>
 &lt;td>&lt;strong>dev-latest&lt;/strong>&lt;/td>
 &lt;td>&lt;strong>master&lt;/strong>&lt;/td>
 &lt;td>&lt;strong>v1.0.0&lt;/strong>&lt;/td>
 &lt;td>v1.29, v1.30, v1.31, v1.32&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>搜索结果</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/search/</guid><description/></item><item><title>维护者</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/codeowners/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/codeowners/</guid><description>&lt;h2 id="the-following-maintainers-listed-in-alphabetical-order-own-everything">以下是拥有所有权限的维护者（按字母顺序排列）&lt;a class="td-heading-self-link" href="#the-following-maintainers-listed-in-alphabetical-order-own-everything" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>@arkodg&lt;/li>
&lt;li>@qicz&lt;/li>
&lt;li>@Xunzhuo&lt;/li>
&lt;li>@zirain&lt;/li>
&lt;li>@zhaohuabing&lt;/li>
&lt;/ul>
&lt;h2 id="emeritus-maintainers">荣誉退休维护者&lt;a class="td-heading-self-link" href="#emeritus-maintainers" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>@alexgervais&lt;/li>
&lt;li>@danehans&lt;/li>
&lt;li>@LukeShu&lt;/li>
&lt;li>@skriss&lt;/li>
&lt;li>@youngnick&lt;/li>
&lt;li>@Alice-Lilith&lt;/li>
&lt;/ul></description></item><item><title>文档内容编写规范（中文）</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/docs_standard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/docs_standard/</guid><description>&lt;p>中文内容的位置在 &lt;code>site/content/zh&lt;/code> 目录中，具体内容和结构应与英文版本保持一致。&lt;/p>
&lt;h2 id="standard">规范&lt;a class="td-heading-self-link" href="#standard" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>以下定义了一些编写规范，并提供示例和对应 Markdown 写法。&lt;/p>
&lt;h3 id="mixed-chinese-and-english">中英文混排&lt;a class="td-heading-self-link" href="#mixed-chinese-and-english" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>当内容中存在中文和英文混排的时候中英文间需要加一个空格，
中文与中文之间无需空格（即使某个中文是链路的一部分也不需要空格）：&lt;/p>
&lt;p>&lt;strong>示例：&lt;/strong>&lt;/p>
&lt;p>这里有中文和 English 混排。
可以跳转到&lt;a href="https://zirain.github.io/eg-pr-preview/5-test-docs-preview/eg-pr-preview/5-test-docs-preview/zh/contributions/docs_standard/#standard">规范&lt;/a>处重新阅读。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-md" data-lang="md">&lt;span style="display:flex;">&lt;span>这里有中文和 English 混排。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>可以跳转到[规范](#standard)处重新阅读。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="bold">粗体&lt;a class="td-heading-self-link" href="#bold" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>在中文内容中建议一律使用两个星号表示粗体：&lt;/p>
&lt;p>&lt;strong>示例：&lt;/strong>&lt;/p>
&lt;p>其中&lt;strong>非常重要&lt;/strong>的内容是&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-md" data-lang="md">&lt;span style="display:flex;">&lt;span>其中**非常重要**的内容是
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="punctuation">标点符号&lt;a class="td-heading-self-link" href="#punctuation" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>中文内容中遇到的标点符号都要用全角，
无论中英文内容与全角标点符号之间无需空格（即使某个中文是在加粗格式之中也不需要空格）&lt;/p>
&lt;p>&lt;strong>示例：&lt;/strong>&lt;/p>
&lt;p>无法确认吗？确认无误（没有任何拼写错误）后，可以继续后面的步骤。
安装 Envoy Gateway（通过命令）&lt;strong>结束后&lt;/strong>，查看相关 Service。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-md" data-lang="md">&lt;span style="display:flex;">&lt;span>无法确认吗？确认无误（没有任何拼写错误）后，可以继续后面的步骤。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>安装 Envoy Gateway（通过命令）**结束后**，查看相关 Service。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="anchor">锚&lt;a class="td-heading-self-link" href="#anchor" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>标题要添加英文锚（anchor），用于在其他内容中保持引用定位的一致性：&lt;/p>
&lt;p>&lt;strong>示例：&lt;/strong>&lt;/p>
&lt;h4 id="example">示例&lt;a class="td-heading-self-link" href="#example" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-md" data-lang="md">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#800080;font-weight:bold">#### 示例 {#example}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="no-need-for-translation">无需翻译的情况&lt;a class="td-heading-self-link" href="#no-need-for-translation" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>如果内容中的英文是命令，特定专有名词，如 CRD 名称，协议名称等，请保持大小写与原本定义一致：&lt;/p>
&lt;p>&lt;strong>示例：&lt;/strong>&lt;/p>
&lt;p>使用 curl 命令发起 HTTP 请求。
在 kind 集群中添加 Gateway 资源，创建 Service 和 Deployment。&lt;/p></description></item><item><title>行为准则</title><link>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/code_of_conduct/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/5-test-docs-preview/zh/contributions/code_of_conduct/</guid><description>&lt;p>Envoy Gateway 遵循
&lt;a href="https://github.com/cncf/foundation/blob/main/code-of-conduct-languages/zh.md">CNCF 行为准则&lt;/a>。&lt;/p></description></item></channel></rss>