<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Operations on Envoy Gateway</title><link>https://zirain.github.io/eg-pr-preview/6-test-preview/v1.2/tasks/operations/</link><description>Recent content in Operations on Envoy Gateway</description><generator>Hugo</generator><language>en</language><atom:link href="https://zirain.github.io/eg-pr-preview/6-test-preview/v1.2/tasks/operations/index.xml" rel="self" type="application/rss+xml"/><item><title>Customize EnvoyProxy</title><link>https://zirain.github.io/eg-pr-preview/6-test-preview/v1.2/tasks/operations/customize-envoyproxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/6-test-preview/v1.2/tasks/operations/customize-envoyproxy/</guid><description>&lt;p>Envoy Gateway provides an &lt;a href="../../../api/extension_types#envoyproxy">EnvoyProxy&lt;/a> CRD that can be linked to the ParametersRef
in a Gateway and GatewayClass, allowing cluster admins to customize the managed EnvoyProxy Deployment and
Service. To learn more about GatewayClass and ParametersRef, please refer to &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API documentation&lt;/a>.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;a class="td-heading-self-link" href="#prerequisites" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Follow the steps from the &lt;a href="https://zirain.github.io/eg-pr-preview/6-test-preview/eg-pr-preview/6-test-preview/v1.2/tasks/quickstart/">Quickstart&lt;/a> task to install Envoy Gateway and the example manifest.
Before proceeding, you should be able to query the example backend using HTTP.&lt;/p></description></item><item><title>Deployment Mode</title><link>https://zirain.github.io/eg-pr-preview/6-test-preview/v1.2/tasks/operations/deployment-mode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/6-test-preview/v1.2/tasks/operations/deployment-mode/</guid><description>&lt;h2 id="deployment-modes">Deployment modes&lt;a class="td-heading-self-link" href="#deployment-modes" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h3 id="one-gatewayclass-per-envoy-gateway-controller">One GatewayClass per Envoy Gateway Controller&lt;a class="td-heading-self-link" href="#one-gatewayclass-per-envoy-gateway-controller" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>An Envoy Gateway is associated with a single &lt;a href="https://gateway-api.sigs.k8s.io/api-types/gatewayclass/">GatewayClass&lt;/a> resource under one controller.
This is the simplest deployment mode and is suitable for scenarios where each Gateway needs to have its own dedicated set of resources and configurations.&lt;/li>
&lt;/ul>
&lt;h3 id="multiple-gatewayclasses-per-envoy-gateway-controller">Multiple GatewayClasses per Envoy Gateway Controller&lt;a class="td-heading-self-link" href="#multiple-gatewayclasses-per-envoy-gateway-controller" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>An Envoy Gateway is associated with multiple &lt;a href="https://gateway-api.sigs.k8s.io/api-types/gatewayclass/">GatewayClass&lt;/a> resources under one controller.&lt;/li>
&lt;li>Support for accepting multiple GatewayClasses was added &lt;a href="https://github.com/envoyproxy/gateway/issues/1231">here&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h3 id="separate-envoy-gateway-controllers">Separate Envoy Gateway Controllers&lt;a class="td-heading-self-link" href="#separate-envoy-gateway-controllers" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>If you&amp;rsquo;ve instantiated multiple GatewayClasses, you can also run separate Envoy Gateway controllers in different namespaces, linking a GatewayClass to each of them for multi-tenancy.
Please follow the example &lt;a href="https://zirain.github.io/eg-pr-preview/6-test-preview/eg-pr-preview/6-test-preview/v1.2/tasks/operations/deployment-mode/#multi-tenancy">Multi-tenancy&lt;/a>.&lt;/p></description></item><item><title>Standalone Deployment Mode</title><link>https://zirain.github.io/eg-pr-preview/6-test-preview/v1.2/tasks/operations/standalone-deployment-mode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/6-test-preview/v1.2/tasks/operations/standalone-deployment-mode/</guid><description>&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Notice&lt;/h4>

 Standalone mode is an experimental feature, please &lt;strong>DO NOT&lt;/strong> use it in production.

&lt;/div>

&lt;p>Envoy Gateway also supports running in standalone mode. In this mode, Envoy Gateway
does not need to rely on Kubernetes and can be deployed directly on bare metal or virtual machines.&lt;/p>
&lt;p>Currently, Envoy Gateway only support the file provider and the host infrastructure provider combinations.&lt;/p>
&lt;ul>
&lt;li>The file provider will configure the Envoy Gateway to get all gateway-api resources from file system.&lt;/li>
&lt;li>The host infrastructure provider will configure the Envoy Gateway to deploy one Envoy Proxy as a host process.&lt;/li>
&lt;/ul>
&lt;h2 id="quick-start">Quick Start&lt;a class="td-heading-self-link" href="#quick-start" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>In this quick-start, we will run Envoy Gateway in standalone mode with the file provider
and the host infrastructure provider.&lt;/p></description></item><item><title>Use egctl</title><link>https://zirain.github.io/eg-pr-preview/6-test-preview/v1.2/tasks/operations/egctl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zirain.github.io/eg-pr-preview/6-test-preview/v1.2/tasks/operations/egctl/</guid><description>&lt;p>&lt;code>egctl&lt;/code> is a command line tool to provide additional functionality for Envoy Gateway users.&lt;/p>
&lt;h2 id="egctl-experimental-translate">egctl experimental translate&lt;a class="td-heading-self-link" href="#egctl-experimental-translate" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>This subcommand allows users to translate from an input configuration type to an output configuration type.&lt;/p>
&lt;p>The &lt;code>translate&lt;/code> subcommand can translate Kubernetes resources to:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Gateway API resources
This is useful in order to see how validation would occur if these resources were applied to Kubernetes.&lt;/p>
&lt;p>Use the &lt;code>--to gateway-api&lt;/code> parameter to translate to Gateway API resources.&lt;/p></description></item></channel></rss>